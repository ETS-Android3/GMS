Index: app/src/main/java/com/GMS/firebaseFireStore/ActionCollection.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.GMS.firebaseFireStore;\r\n\r\nimport com.google.firebase.firestore.Exclude;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class ActionCollection {\r\n    /*\r\n     ** EACH DAILY_ACTIONS DOCUMENT CONTAINS THESE :\r\n     * {\r\n     * ID ,AQEL_NAME , REP_NAME , AGENT_NAME ,SELLING_PRICE ,DELIVERED_QUANTITY ,ACTION_DATE\r\n     *  ,NEIGHBORHOOD_DETAILS { NEIGHBORHOOD_NAME ,NUMBER_OF_DELIVERS }\r\n     *  ,STATION_DETAILS { NAME ,PURCHASING_PRICE , PURCHASED_QUANTITY}\r\n     * }\r\n     */\r\n\r\n    private  String id;\r\n    private  String aqelName;\r\n    private  String repName;\r\n    private  String agentName;\r\n    private  double sellingPrice;\r\n    private  int deliveredQuantity;\r\n    private  String actionDate;\r\n    private  Map<String, Object> neighborhoodDetails = new HashMap<>();\r\n    private String neighborhoodName;\r\n    private int numberOfDelivered;\r\n    private  Map<String, Object> stationDetails = new HashMap<>();\r\n    private String name;\r\n    private double purchasingPrice;\r\n    private int purchasedQuantity;\r\n\r\n    public ActionCollection( String aqelName, String repName, String agentName, double sellingPrice, int deliveredQuantity, String actionDate,Map<String, Object> stationDetails ,Map<String, Object> neighborhoodDetails) {\r\n        this.aqelName = aqelName;\r\n        this.repName = repName;\r\n        this.agentName = agentName;\r\n        this.sellingPrice = sellingPrice;\r\n        this.deliveredQuantity = deliveredQuantity;\r\n        this.actionDate = actionDate;\r\n        this.stationDetails = stationDetails;\r\n        this.neighborhoodDetails= neighborhoodDetails;\r\n    }\r\n\r\n    public void setId(String id) {\r\n        this.id = id;\r\n    }\r\n\r\n    @Exclude\r\n    public String getId() {\r\n        return id;\r\n    }\r\n\r\n    public String getAqelName() {\r\n        return aqelName;\r\n    }\r\n\r\n    public String getRepName() {\r\n        return repName;\r\n    }\r\n\r\n    public String getAgentName() {\r\n        return agentName;\r\n    }\r\n\r\n    public double getSellingPrice() {\r\n        return sellingPrice;\r\n    }\r\n\r\n    public int getDeliveredQuantity() {\r\n        return deliveredQuantity;\r\n    }\r\n\r\n    public String getActionDate() {\r\n        return actionDate;\r\n    }\r\n\r\n    public Map<String, Object> getNeighborhoodDetails() {\r\n        return neighborhoodDetails;\r\n    }\r\n\r\n    public Map<String, Object> getStationDetails() {\r\n        return stationDetails;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/GMS/firebaseFireStore/ActionCollection.java b/app/src/main/java/com/GMS/firebaseFireStore/ActionCollection.java
--- a/app/src/main/java/com/GMS/firebaseFireStore/ActionCollection.java	(revision e48385add5514f822590ef11b35c51f6c5d0bd16)
+++ b/app/src/main/java/com/GMS/firebaseFireStore/ActionCollection.java	(date 1639577590049)
@@ -11,7 +11,7 @@
      * {
      * ID ,AQEL_NAME , REP_NAME , AGENT_NAME ,SELLING_PRICE ,DELIVERED_QUANTITY ,ACTION_DATE
      *  ,NEIGHBORHOOD_DETAILS { NEIGHBORHOOD_NAME ,NUMBER_OF_DELIVERS }
-     *  ,STATION_DETAILS { NAME ,PURCHASING_PRICE , PURCHASED_QUANTITY}
+     *   ,STATION_DETAILS { NAME ,PURCHASING_PRICE , PURCHASED_QUANTITY}
      * }
      */
 
Index: app/src/main/res/layout/recieving_dialog.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"250dp\"\r\n    android:layout_height=\"160dp\"\r\n    android:layout_gravity=\"center\"\r\n    android:background=\"@drawable/round_corner_shape\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/tv_title_dialog\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_margin=\"16dp\"\r\n        android:text=\"@string/confirm\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/close_icon\"\r\n        app:layout_constraintHorizontal_bias=\"0.5\"\r\n        app:layout_constraintHorizontal_chainStyle=\"spread_inside\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <de.hdodenhof.circleimageview.CircleImageView\r\n        android:id=\"@+id/close_icon\"\r\n        android:layout_width=\"24dp\"\r\n        android:layout_height=\"24dp\"\r\n        android:layout_gravity=\"center\"\r\n        android:layout_margin=\"8dp\"\r\n        android:backgroundTint=\"#ffffffff\"\r\n        android:elevation=\"0dp\"\r\n        android:src=\"@drawable/cancel_icon\"\r\n        app:civ_border_color=\"#FFFFFF\"\r\n        app:civ_border_width=\"2dp\"\r\n        app:layout_collapseMode=\"none\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.5\"\r\n        app:layout_constraintStart_toEndOf=\"@+id/tv_title_dialog\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/quantity_layout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"16dp\"\r\n        android:layout_marginTop=\"24dp\"\r\n        android:layout_marginEnd=\"16dp\"\r\n        android:layout_marginBottom=\"8dp\"\r\n        android:hint=\"@string/receiving\"\r\n        app:counterMaxLength=\"2\"\r\n        app:endIconMode=\"clear_text\"\r\n        app:helperTextTextColor=\"#FF0000\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/tv_title_dialog\"/>\r\n\r\n    <TextView\r\n        android:id=\"@+id/tv_accept\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_margin=\"16dp\"\r\n        android:padding=\"8dp\"\r\n        android:textColor=\"@color/colorPrimary\"\r\n        android:text=\"@string/accept\"\r\n        android:background=\"@color/transparent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        />\r\n    <TextView\r\n        android:id=\"@+id/tv_cancel\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_margin=\"16dp\"\r\n        android:padding=\"8dp\"\r\n        android:textColor=\"@color/Charcoal\"\r\n        android:text=\"@string/cancel\"\r\n        android:background=\"@color/transparent\"\r\n        app:layout_constraintStart_toEndOf=\"@id/tv_accept\"\r\n        app:layout_constraintTop_toTopOf=\"@id/tv_accept\"\r\n        app:layout_constraintBottom_toBottomOf=\"@id/tv_accept\"\r\n\r\n        />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/recieving_dialog.xml b/app/src/main/res/layout/recieving_dialog.xml
--- a/app/src/main/res/layout/recieving_dialog.xml	(revision e48385add5514f822590ef11b35c51f6c5d0bd16)
+++ b/app/src/main/res/layout/recieving_dialog.xml	(date 1639377460363)
@@ -59,6 +59,8 @@
         android:padding="8dp"
         android:textColor="@color/colorPrimary"
         android:text="@string/accept"
+        android:clickable="true"
+        android:contextClickable="true"
         android:background="@color/transparent"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintBottom_toBottomOf="parent"
@@ -69,6 +71,8 @@
         android:layout_height="wrap_content"
         android:layout_margin="16dp"
         android:padding="8dp"
+        android:clickable="true"
+        android:contextClickable="true"
         android:textColor="@color/Charcoal"
         android:text="@string/cancel"
         android:background="@color/transparent"
Index: app/src/main/java/com/GMS/aqel/fragments/NeedScanAqelFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.GMS.aqel.fragments;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\nimport android.app.Dialog;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.Window;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.ActionBar;\r\nimport androidx.appcompat.widget.SearchView;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.GMS.GeneralClasses.CitizenItemClickListener;\r\nimport com.GMS.R;\r\nimport com.GMS.SettingActivity;\r\nimport com.GMS.aqel.activities.AddCitizenActivity;\r\nimport com.GMS.aqel.activities.AqelNotificationsActivity;\r\nimport com.GMS.aqel.adapters.RecyclerViewAqelAdapter;\r\nimport com.GMS.aqel.helperClass.CitizenItemOfAqel;\r\nimport com.GMS.databinding.FragmentNeedScanAqelBinding;\r\nimport com.GMS.firebaseFireStore.CitizenActionDetails;\r\nimport com.GMS.firebaseFireStore.CollectionName;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.material.textfield.TextInputEditText;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.firebase.firestore.SetOptions;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class NeedScanAqelFragment extends Fragment {\r\n\r\n    public static final int FRAGMENT_ID = 1;\r\n    FragmentNeedScanAqelBinding mBinding;\r\n    RecyclerViewAqelAdapter adapter;\r\n    ArrayList<CitizenItemOfAqel> items = new ArrayList<>();\r\n\r\n    ArrayList<CitizenActionDetails> detailsItems = new ArrayList<>();\r\n    CitizenItemClickListener mItemClickListener;\r\n    private Dialog mDialog;\r\n    private TextInputEditText textInputEditTextQTY;\r\n    private TextView tvTotal , tvRequiredQty;\r\n    String idAction;\r\n\r\n    long sellingPrice ;\r\n    private static int Qty;\r\n    private final FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private final CollectionReference mCollectionRef = db.collection(CollectionName.CITIZENS.name());\r\n    private final CollectionReference mCollectionRefNeighborhood = db.collection(CollectionName.NEIGHBORHOODS.name());\r\n    private final CollectionReference mCollectionRefAction = db.collection(CollectionName.ACTIONS.name());\r\n    private final CollectionReference mCollectionRefActionDetails = db.collection(CollectionName.ACTION_DETAILS.name());\r\n\r\n    private String id;\r\n    // this for dealing with Runnable an clean it\r\n    Handler mHandler = new Handler();\r\n\r\n    public NeedScanAqelFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        mBinding = FragmentNeedScanAqelBinding.inflate(inflater, container, false);\r\n        createDialog();\r\n      // addActionDetails();\r\n        getAction();\r\n\r\n\r\n\r\n        mItemClickListener = new CitizenItemClickListener() {\r\n            @Override\r\n            public void onClick(int position) {\r\n                tvRequiredQty.setText(String.valueOf(detailsItems.get(position).getQuantityRequired()));\r\n                showDialog( position);\r\n                  }\r\n        };\r\n\r\n        return mBinding.getRoot();\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(@Nullable @org.jetbrains.annotations.Nullable Bundle savedInstanceState) {\r\n        setHasOptionsMenu(true);\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n    @Override\r\n    public void onCreateOptionsMenu(@NonNull @NotNull Menu menu, @NonNull @NotNull MenuInflater inflater) {\r\n        inflater.inflate(R.menu.menu_aqel_top_bar, menu);\r\n        MenuItem searchItem = menu.findItem(R.id.search_ic);\r\n        SearchView searchView = (SearchView) searchItem.getActionView();\r\n\r\n        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\r\n            @Override\r\n            public boolean onQueryTextSubmit(String query) {\r\n                adapter.getFilter().filter(query);\r\n                return false;\r\n            }\r\n\r\n            @Override\r\n            public boolean onQueryTextChange(String newText) {\r\n                adapter.getFilter().filter(newText);\r\n                return false;\r\n            }\r\n\r\n        });\r\n        super.onCreateOptionsMenu(menu, inflater);\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(@NonNull @NotNull MenuItem item) {\r\n        switch (item.getItemId()) {\r\n            case R.id.add_citizen:\r\n                Intent mAddCitizenIntent = new Intent(this.getActivity(), AddCitizenActivity.class);\r\n                startActivity(mAddCitizenIntent);\r\n                break;\r\n            case R.id.setting_item:\r\n                Intent mSettingIntent = new Intent(this.getActivity(), SettingActivity.class);\r\n                startActivity(mSettingIntent);\r\n                break;\r\n            case R.id.notification:\r\n                Intent mNotifications = new Intent(this.getActivity(), AqelNotificationsActivity.class);\r\n                startActivity(mNotifications);\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n    private void createDialog() {\r\n        mDialog = new Dialog(mBinding.getRoot().getContext());\r\n        mDialog.setContentView(R.layout.accept_qr_scanner_dialoge);\r\n        mDialog.getWindow().setBackgroundDrawableResource(R.color.transparent);\r\n        Window window = mDialog.getWindow();\r\n        window.setGravity(Gravity.CENTER);\r\n        window.getAttributes().windowAnimations = R.style.DialogAnimation;\r\n        mDialog.setCancelable(true);\r\n        textInputEditTextQTY = mDialog.findViewById(R.id.quantity_text_input);\r\n        tvTotal = mDialog.findViewById(R.id.tv_price);\r\n        tvRequiredQty = mDialog.findViewById(R.id.tv_required_Qty);\r\n        window.setLayout(ActionBar.LayoutParams.WRAP_CONTENT, ActionBar.LayoutParams.WRAP_CONTENT);\r\n    }\r\n\r\n    private void showDialog(int position) {\r\n        mDialog.show();\r\n        mRunnable.run();\r\n        mDialog.findViewById(R.id.close_icon).setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                mHandler.removeCallbacks(mRunnable);\r\n                mDialog.dismiss();\r\n            }\r\n        });\r\n        mDialog.findViewById(R.id.btn_accept).setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                acceptData(position);\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private void acceptData(int position) {\r\n        if (textInputEditTextQTY.getText().toString().trim().equals(\"\")) {\r\n            Toast.makeText(getActivity(), \"no Quantity\", Toast.LENGTH_SHORT).show();\r\n        }\r\n        else if (Integer.valueOf(textInputEditTextQTY.getText().toString().trim().toString())>detailsItems.get(position).getQuantityRequired()) {\r\n        Toast.makeText(getActivity() , \"qty is so much\" , Toast.LENGTH_SHORT).show();\r\n        }\r\n            else\r\n        {\r\n            Qty =Integer.valueOf(textInputEditTextQTY.getText().toString().trim().toString());\r\n            CitizenActionDetails citizenActionDetails = detailsItems.get(position);\r\n            citizenActionDetails.setDeliveredQuantity((int) Qty);\r\n            citizenActionDetails.setTotal((int)(sellingPrice*Qty));\r\n            Map<String ,Object> updateState = citizenActionDetails.getDeliveredState();\r\n            updateState.put(CollectionName.Fields.aqelVerified.name(), true);\r\n            citizenActionDetails.setDeliveredState(updateState);\r\n            Qty = Integer.valueOf(textInputEditTextQTY.getText().toString());\r\n            mHandler.removeCallbacks(mRunnable);\r\n            mDialog.dismiss();\r\n            mCollectionRefAction.document(idAction).collection(CollectionName.ACTION_DETAILS.name())\r\n                    .document(detailsItems.get(position).getDocumentId()).set(citizenActionDetails , SetOptions.merge())\r\n                    .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                        @Override\r\n                        public void onSuccess(Void unused) {\r\n                            Toast.makeText(getActivity(), \"Verified\", Toast.LENGTH_SHORT).show();\r\n\r\n                        }\r\n                    });\r\n           // Toast.makeText(getActivity(), String.valueOf(Qty*sellingPrice), Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    // this realtime listen for changes with editText at the dialog\r\n    private final Runnable mRunnable = new Runnable() {\r\n        @Override\r\n        public void run() {\r\n            if (textInputEditTextQTY.getText().toString().trim().equals(\"\")) {\r\n                tvTotal.setText(getString(R.string.total) + \" \" + 0);\r\n            } else {\r\n                tvTotal.setText(getString(R.string.total) + \" \" + Integer.valueOf(textInputEditTextQTY.getText().toString()) * sellingPrice);\r\n            }\r\n            mHandler.postDelayed(this, 500);\r\n        }\r\n    };\r\n\r\n    private void initRV() {\r\n        mBinding.progressWhileLoading.setVisibility(View.GONE);\r\n        adapter = new RecyclerViewAqelAdapter(detailsItems, FRAGMENT_ID, mItemClickListener);\r\n        RecyclerView.LayoutManager layoutManager = new LinearLayoutManager(getContext());\r\n        mBinding.rvNeedScanFragment.setHasFixedSize(true);\r\n        mBinding.rvNeedScanFragment.setLayoutManager(layoutManager);\r\n        mBinding.rvNeedScanFragment.setAdapter(adapter);\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        mCollectionRefNeighborhood.whereEqualTo(\"name\", \"Mousa Street\").get().addOnSuccessListener(\r\n                new OnSuccessListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onSuccess(QuerySnapshot queryDocumentSnapshots) {\r\n                        if (queryDocumentSnapshots.isEmpty()) {\r\n                            mBinding.progressWhileLoading.setVisibility(View.GONE);\r\n                        } else {\r\n                            for (QueryDocumentSnapshot q : queryDocumentSnapshots) {\r\n                                id = q.getId();\r\n                                break;\r\n                            }\r\n                            mCollectionRefNeighborhood.document(id).collection(CollectionName.CITIZENS.name()).get().addOnSuccessListener(new OnSuccessListener<QuerySnapshot>() {\r\n                                @Override\r\n                                public void onSuccess(QuerySnapshot queryDocumentSnapshots) {\r\n                                    if (!queryDocumentSnapshots.isEmpty()) {\r\n                                        Toast.makeText(mBinding.getRoot().getContext(), id, Toast.LENGTH_SHORT).show();\r\n                                    } else {\r\n                                        for (QueryDocumentSnapshot q : queryDocumentSnapshots) {\r\n                                            // add citizen to action Details\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n        );\r\n\r\n    }\r\n\r\n    private void getAction() {\r\n\r\n        mCollectionRefAction.whereEqualTo(CollectionName.Fields.actionDate.name(), String.valueOf(new java.sql.Date(System.currentTimeMillis())))\r\n                .whereEqualTo(CollectionName.Fields.neighborhoodDetails.name() + \".\" + CollectionName.Fields.name.name(), \"Mousa Street\")\r\n                .get().addOnSuccessListener(new OnSuccessListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onSuccess(QuerySnapshot queryDocumentSnapshots) {\r\n                if (!queryDocumentSnapshots.isEmpty()) {\r\n                        idAction =queryDocumentSnapshots.getDocuments().get(0).getId().toString();\r\n                        sellingPrice = queryDocumentSnapshots.getDocuments().get(0).getLong(CollectionName.Fields.sellingPrice.name().toString());\r\n\r\n                    getActionDetails();\r\n\r\n                } else {\r\n                    mBinding.progressWhileLoading.setVisibility(View.GONE);\r\n                    Toast.makeText(getContext().getApplicationContext(), \"no Action today\", Toast.LENGTH_SHORT).show();\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getActionDetails() {\r\n        mCollectionRefAction.document(idAction).collection(CollectionName.ACTION_DETAILS.name())\r\n                .whereEqualTo(CollectionName.Fields.deliveredState.name() + \".\" + CollectionName.Fields.aqelVerified, false)\r\n                .addSnapshotListener(new EventListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onEvent(@Nullable QuerySnapshot queryDocumentSnapshots, @Nullable FirebaseFirestoreException e) {\r\n                        if (e != null) {\r\n                            Log.e(TAG, e.toString());\r\n                        }\r\n                        if (queryDocumentSnapshots.isEmpty()) {\r\n                            adapter = null ;\r\n                            detailsItems.clear();\r\n                            initRV();\r\n                            mBinding.progressWhileLoading.setVisibility(View.GONE);\r\n                            Toast.makeText(getContext().getApplicationContext(), \"no Items\", Toast.LENGTH_SHORT).show();\r\n                        } else {\r\n                            adapter = null ;\r\n                            detailsItems.clear();\r\n                            for (QueryDocumentSnapshot q : queryDocumentSnapshots) {\r\n\r\n                                CitizenActionDetails actionDetails = q.toObject(CitizenActionDetails.class);\r\n                                actionDetails.setDocumentId(q.getId());\r\n                                detailsItems.add(actionDetails);\r\n                                 }\r\n                            initRV();\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void addActionDetails() {\r\n        Toast.makeText(getContext().getApplicationContext(), \"addDetails\", Toast.LENGTH_SHORT).show();\r\n        mCollectionRefNeighborhood.whereEqualTo(CollectionName.Fields.name.name(),\r\n                \"Mousa Street\").get().addOnSuccessListener(new OnSuccessListener<QuerySnapshot>() {\r\n            String id;\r\n            String actionId;\r\n\r\n            @Override\r\n            public void onSuccess(QuerySnapshot queryDocumentSnapshots) {\r\n                if (!queryDocumentSnapshots.isEmpty()) {\r\n                    for (QueryDocumentSnapshot q : queryDocumentSnapshots) {\r\n                        id = q.getId();\r\n                        break;\r\n                    }\r\n                    mCollectionRefAction.whereEqualTo(CollectionName.Fields.actionDate.name(), String.valueOf(new java.sql.Date(System.currentTimeMillis()))).get().addOnSuccessListener(\r\n                            new OnSuccessListener<QuerySnapshot>() {\r\n                                @Override\r\n                                public void onSuccess(QuerySnapshot queryDocumentSnapshots) {\r\n                                    for (QueryDocumentSnapshot q : queryDocumentSnapshots) {\r\n                                        actionId = q.getId();\r\n                                        break;\r\n                                    }\r\n                                    mCollectionRefNeighborhood.document(id).collection(CollectionName.CITIZENS.name()).whereEqualTo(CollectionName.Fields.state.name(), true).get()\r\n                                            .addOnSuccessListener(new OnSuccessListener<QuerySnapshot>() {\r\n                                                @Override\r\n                                                public void onSuccess(QuerySnapshot queryDocumentSnapshots) {\r\n\r\n                                                    if (!queryDocumentSnapshots.isEmpty()) {\r\n\r\n                                                        Map<String, Object> deliveredState = new HashMap<>();\r\n                                                        deliveredState.put(CollectionName.Fields.aqelVerified.name(), false);\r\n                                                        deliveredState.put(CollectionName.Fields.repVerified.name(), false);\r\n                                                        deliveredState.put(CollectionName.Fields.delivered.name(), false);\r\n                                                        deliveredState.put(CollectionName.Fields.received.name(), false);\r\n\r\n                                                        for (QueryDocumentSnapshot q : queryDocumentSnapshots) {\r\n                                                            detailsItems.add(new CitizenActionDetails(q.getId(),\r\n                                                                    q.getString(CollectionName.Fields.fullName.name())\r\n                                                                    , 0, 0.0, String.valueOf(new java.sql.Date(System.currentTimeMillis())),\r\n                                                                    \"\"\r\n                                                                    , deliveredState, q.getLong(CollectionName.Fields.numberOfCylinders.name())));\r\n                                                        }\r\n                                                        for (CitizenActionDetails c : detailsItems) {\r\n                                                            mCollectionRefAction.document(actionId).collection(CollectionName.ACTION_DETAILS.name().toString()).add(c)\r\n                                                                    .addOnSuccessListener(new OnSuccessListener<DocumentReference>() {\r\n                                                                        @Override\r\n                                                                        public void onSuccess(DocumentReference documentReference) {\r\n                                                                            Toast.makeText(getContext().getApplicationContext(), \"data have gotten\", Toast.LENGTH_SHORT).show();\r\n\r\n                                                                        }\r\n                                                                    });\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            });\r\n\r\n                                }\r\n                            }\r\n                    );\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/GMS/aqel/fragments/NeedScanAqelFragment.java b/app/src/main/java/com/GMS/aqel/fragments/NeedScanAqelFragment.java
--- a/app/src/main/java/com/GMS/aqel/fragments/NeedScanAqelFragment.java	(revision e48385add5514f822590ef11b35c51f6c5d0bd16)
+++ b/app/src/main/java/com/GMS/aqel/fragments/NeedScanAqelFragment.java	(date 1639554423371)
@@ -27,6 +27,7 @@
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.GMS.GeneralClasses.CitizenItemClickListener;
+import com.GMS.GeneralClasses.Dialogs;
 import com.GMS.R;
 import com.GMS.SettingActivity;
 import com.GMS.aqel.activities.AddCitizenActivity;
@@ -90,7 +91,7 @@
         // Inflate the layout for this fragment
         mBinding = FragmentNeedScanAqelBinding.inflate(inflater, container, false);
         createDialog();
-      // addActionDetails();
+    // addActionDetails();
         getAction();
 
 
Index: app/src/main/java/com/GMS/aqel/activities/AqelActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.GMS.aqel.activities;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.viewpager2.widget.ViewPager2;\r\n\r\nimport com.GMS.Constant;\r\nimport com.GMS.QRScannerActivity;\r\nimport com.GMS.R;\r\nimport com.GMS.aqel.adapters.ViewPager2AqelAdapter;\r\nimport com.GMS.databinding.ActivityAqelBinding;\r\nimport com.GMS.firebaseFireStore.ActionCollection;\r\nimport com.GMS.firebaseFireStore.CollectionName;\r\nimport com.GMS.firebaseFireStore.NeighborhoodCollection;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.material.tabs.TabLayout;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\npublic class  AqelActivity extends AppCompatActivity {\r\n\r\n    ActivityAqelBinding mBinding;\r\n    ViewPager2AqelAdapter adapter;\r\n    private final FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private final CollectionReference action = db.collection(CollectionName.ACTIONS.name().toString());\r\n    private final CollectionReference mCollectionRef = db.collection(CollectionName.NEIGHBORHOODS.name());\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        mBinding = ActivityAqelBinding.inflate(getLayoutInflater());\r\n        setContentView(mBinding.getRoot());\r\n\r\n        // change color of status bar color\r\n        this.getWindow().setStatusBarColor(getResources().getColor(R.color.colorPrimary));\r\n        setSupportActionBar(mBinding.toolBar.toolBarAqel);\r\n        setTitle(\"Aqel\");\r\n       //addAction();\r\n        FragmentManager fm = getSupportFragmentManager();\r\n        adapter = new ViewPager2AqelAdapter(fm, getLifecycle());\r\n        mBinding.mainViewPager.setAdapter(adapter);\r\n        mBinding.tabLayoutAqel.addTab(mBinding.tabLayoutAqel.newTab().setText(getResources().getString(R.string.need_scan)));\r\n        mBinding.tabLayoutAqel.addTab(mBinding.tabLayoutAqel.newTab().setText(getResources().getString(R.string.verified)));\r\n        mBinding.tabLayoutAqel.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {\r\n            @Override\r\n            public void onTabSelected(TabLayout.Tab tab) {\r\n                mBinding.mainViewPager.setCurrentItem(tab.getPosition());\r\n                if (mBinding.mainViewPager.getCurrentItem() == 1 || tab.getPosition() == 1) {\r\n                    mBinding.fabScan.setVisibility(View.GONE);\r\n                } else {\r\n                    mBinding.fabScan.setVisibility(View.VISIBLE);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onTabUnselected(TabLayout.Tab tab) {\r\n\r\n            }\r\n\r\n            @Override\r\n\r\n            public void onTabReselected(TabLayout.Tab tab) {\r\n\r\n            }\r\n        });\r\n        mBinding.mainViewPager.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {\r\n            @Override\r\n            public void onPageSelected(int position) {\r\n                mBinding.tabLayoutAqel.selectTab(mBinding.tabLayoutAqel.getTabAt(position));\r\n                if (position == 1) {\r\n                    mBinding.fabScan.setVisibility(View.GONE);\r\n                } else {\r\n                    mBinding.fabScan.setVisibility(View.VISIBLE);\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n        mBinding.fabScan.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if(mBinding.tabLayoutAqel.getSelectedTabPosition()==0) {\r\n                    /*\r\n                    Intent intent = new Intent(mBinding.getRoot().getContext(), QRScannerActivity.class);\r\n                    intent.putExtra(Constant.ACTIVITY.toString() , Constant.AQELNEEDSCANFRAGNENT.toString());\r\n                    startActivity(intent);\r\n                     */\r\n                    Map<String ,Object> aqelDetails = new HashMap<>();\r\n                    Map<String , Object> location = new HashMap<>();\r\n                    location.put(CollectionName.Fields.latitude.name(), \"12 14\");\r\n                    location.put(CollectionName.Fields.longitude.name(), \"12 15\");\r\n                    aqelDetails.put(CollectionName.Fields.name.name(), \"Ahmed\");\r\n                    aqelDetails.put(CollectionName.Fields.userName.name(), \"a7md\");\r\n                    aqelDetails.put(CollectionName.Fields.password.name(), \"123\");\r\n                    aqelDetails.put(CollectionName.Fields.hireDate.name(), String.valueOf(new java.sql.Date(System.currentTimeMillis())));\r\n                    Map<String ,Object> socialAccounts = new HashMap<>();\r\n                    socialAccounts.put(CollectionName.Fields.facebook.name(), \"facebook\");\r\n                    socialAccounts.put(CollectionName.Fields.google.name(), \"google\");\r\n                    ArrayList<String> telephones = new ArrayList<>();\r\n                    telephones.add(\"734157397\");\r\n                    telephones.add(\"770038518\");\r\n                    aqelDetails.put(CollectionName.Fields.socialAccounts.name(), socialAccounts);\r\n                    aqelDetails.put(CollectionName.Fields.telephones.name(), telephones);\r\n                    NeighborhoodCollection neighborhood = new NeighborhoodCollection(\"Mousa Street\" ,(List<String>) telephones ,0 ,\r\n                            aqelDetails ,location);\r\n                    mCollectionRef.add(neighborhood).addOnSuccessListener(new OnSuccessListener<DocumentReference>() {\r\n                        @Override\r\n                        public void onSuccess(DocumentReference documentReference) {\r\n                            Toast.makeText(getBaseContext(), \"done\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    });\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        mBinding = null;\r\n    }\r\n    private void addAction() {\r\n        Map<String, Object> stationDetails = new HashMap<>();\r\n        stationDetails.put(CollectionName.Fields.stationName.name(), \" AlHowak\");\r\n        stationDetails.put(CollectionName.Fields.telephones.name(), \"734 157 397\");\r\n        Map<String, Object> neighborhoodDetails = new HashMap<>();\r\n        neighborhoodDetails.put(CollectionName.Fields.name.name(), \"Mousa Street\");\r\n        neighborhoodDetails.put(CollectionName.Fields.numberOfDelivered.name(), 0);\r\n        ActionCollection actionCollection = new ActionCollection(\"Abdulrahman\",\r\n                \"abubaker\",\r\n                \"khalid\",\r\n                3350,\r\n                1189,\r\n                String.valueOf(new java.sql.Date(System.currentTimeMillis())),\r\n                stationDetails, neighborhoodDetails);\r\n\r\n        action.add(actionCollection).addOnSuccessListener(new OnSuccessListener<DocumentReference>() {\r\n            @Override\r\n            public void onSuccess(DocumentReference documentReference) {\r\n\r\n                Toast.makeText(getBaseContext() , \"action\" , Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/GMS/aqel/activities/AqelActivity.java b/app/src/main/java/com/GMS/aqel/activities/AqelActivity.java
--- a/app/src/main/java/com/GMS/aqel/activities/AqelActivity.java	(revision e48385add5514f822590ef11b35c51f6c5d0bd16)
+++ b/app/src/main/java/com/GMS/aqel/activities/AqelActivity.java	(date 1639555468437)
@@ -45,7 +45,7 @@
         this.getWindow().setStatusBarColor(getResources().getColor(R.color.colorPrimary));
         setSupportActionBar(mBinding.toolBar.toolBarAqel);
         setTitle("Aqel");
-       //addAction();
+         //addAction();
         FragmentManager fm = getSupportFragmentManager();
         adapter = new ViewPager2AqelAdapter(fm, getLifecycle());
         mBinding.mainViewPager.setAdapter(adapter);
@@ -55,6 +55,8 @@
             @Override
             public void onTabSelected(TabLayout.Tab tab) {
                 mBinding.mainViewPager.setCurrentItem(tab.getPosition());
+                mBinding.activityAqelNestedScrollView.fullScroll(View.FOCUS_UP);
+
                 if (mBinding.mainViewPager.getCurrentItem() == 1 || tab.getPosition() == 1) {
                     mBinding.fabScan.setVisibility(View.GONE);
                 } else {
@@ -76,6 +78,7 @@
         mBinding.mainViewPager.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {
             @Override
             public void onPageSelected(int position) {
+                mBinding.activityAqelNestedScrollView.fullScroll(View.FOCUS_UP);
                 mBinding.tabLayoutAqel.selectTab(mBinding.tabLayoutAqel.getTabAt(position));
                 if (position == 1) {
                     mBinding.fabScan.setVisibility(View.GONE);
@@ -95,6 +98,7 @@
                     intent.putExtra(Constant.ACTIVITY.toString() , Constant.AQELNEEDSCANFRAGNENT.toString());
                     startActivity(intent);
                      */
+                    /*
                     Map<String ,Object> aqelDetails = new HashMap<>();
                     Map<String , Object> location = new HashMap<>();
                     location.put(CollectionName.Fields.latitude.name(), "12 14");
@@ -117,8 +121,15 @@
                         @Override
                         public void onSuccess(DocumentReference documentReference) {
                             Toast.makeText(getBaseContext(), "done", Toast.LENGTH_SHORT).show();
+
+
+
                         }
+
+
                     });
+
+                     */
 
                 }
             }
@@ -153,6 +164,7 @@
             }
         });
     }
+
 }
 
 
Index: app/src/main/java/com/GMS/agent/activities/AgentActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.GMS.agent.activities;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\nimport android.Manifest;\r\nimport android.app.Activity;\r\nimport android.app.Dialog;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.Window;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.ActionBar;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.SearchView;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.GMS.GeneralClasses.CitizenItemClickListener;\r\nimport com.GMS.HistoryActivity;\r\nimport com.GMS.R;\r\nimport com.GMS.SettingActivity;\r\nimport com.GMS.agent.adapters.ItemClickListener;\r\nimport com.GMS.agent.adapters.RecyclerViewAdapterCitizen;\r\nimport com.GMS.agent.helperClasses.CitizenItem;\r\nimport com.GMS.databinding.ActivityAgentBinding;\r\nimport com.GMS.firebaseFireStore.CitizenActionDetails;\r\nimport com.GMS.firebaseFireStore.CollectionName;\r\nimport com.GMS.representative.adapters.RecyclerViewRepAdapterCitizen;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class AgentActivity extends AppCompatActivity {\r\n\r\n    //MainAdapter adapter;\r\n\r\n    RecyclerViewAdapterCitizen adapter;\r\n\r\n    private ActivityAgentBinding mBinding;\r\n\r\n    public static Drawable mAcceptedBackgroundImage;\r\n    private Dialog stationDialog;\r\n    private static final int CALL_PERMISSION = 122;\r\n    String idAction;\r\n    long sellingPrice ;\r\n    CitizenItemClickListener mItemClickListener;\r\n    ArrayList<CitizenActionDetails> detailsItems = new ArrayList<>();\r\n    private final FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private final CollectionReference mCollectionRef = db.collection(CollectionName.CITIZENS.name());\r\n    private final CollectionReference mCollectionRefNeighborhood = db.collection(CollectionName.NEIGHBORHOODS.name());\r\n    private final CollectionReference mCollectionRefAction = db.collection(CollectionName.ACTIONS.name());\r\n    private final CollectionReference mCollectionRefActionDetails = db.collection(CollectionName.ACTION_DETAILS.name());\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        mBinding = ActivityAgentBinding.inflate(getLayoutInflater());\r\n        setContentView(mBinding.getRoot());\r\n        mAcceptedBackgroundImage = getDrawable(R.drawable.accpted_image_background_shape);\r\n        // change color of status bar color\r\n        this.getWindow().setStatusBarColor(getResources().getColor(R.color.colorPrimary));\r\n\r\n        setSupportActionBar(mBinding.agentTopBar.toolBarAgent);\r\n        setTitle(\"Agent\");\r\n        mBinding.cardViewHeaderContainer.setBackgroundColor(Color.TRANSPARENT);\r\n\r\n        final int HEIGHT_HEADER_VIEW = mBinding.backgroundHeader.getHeight();\r\n\r\n        mBinding.moreTextView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if (mBinding.moreTextView.getText().equals(getString(R.string.hide))) {\r\n                    ViewGroup.LayoutParams params = mBinding.cardViewHeaderContainer.getLayoutParams();\r\n                    mBinding.moreTextView.setText(R.string.show);\r\n                    params.height = mBinding.textViews.getHeight() * 2;\r\n                    mBinding.cardViewHeaderContainer.setLayoutParams(params);\r\n                    // view\r\n                    ViewGroup.LayoutParams pView = mBinding.backgroundHeader.getLayoutParams();\r\n                    double height = mBinding.textViews.getHeight() * 1;\r\n                    pView.height = (int) height;\r\n                    mBinding.backgroundHeader.setLayoutParams(pView);\r\n                } else {\r\n                    ViewGroup.LayoutParams params = mBinding.cardViewHeaderContainer.getLayoutParams();\r\n                    params.height = ViewGroup.LayoutParams.WRAP_CONTENT;\r\n                    mBinding.cardViewHeaderContainer.setLayoutParams(params);\r\n                    mBinding.moreTextView.setText(R.string.hide);\r\n                    ViewGroup.LayoutParams pView = mBinding.backgroundHeader.getLayoutParams();\r\n                    double height = mBinding.agentTopBar.toolBarAgent.getHeight() * 1.7;\r\n                    pView.height = (int) height;\r\n                    mBinding.backgroundHeader.setLayoutParams(pView);\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        mItemClickListener = new CitizenItemClickListener() {\r\n            @Override\r\n            public void onClick(int position) {\r\n\r\n            }\r\n        };\r\n\r\n     getAction();\r\n\r\n\r\n\r\n\r\n    }\r\n    public  void initRV()\r\n    {\r\n        mBinding.progressWhileLoading.setVisibility(View.GONE);\r\n        adapter = new RecyclerViewAdapterCitizen(detailsItems ,getBaseContext() ,mItemClickListener);\r\n        RecyclerView.LayoutManager layoutManager = new LinearLayoutManager(this);\r\n        mBinding.rvCitizen.setHasFixedSize(true);\r\n        mBinding.rvCitizen.setLayoutManager(layoutManager);\r\n        mBinding.rvCitizen.setAdapter(adapter);\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        mBinding = null;\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        super.onCreateOptionsMenu(menu);\r\n        getMenuInflater().inflate(R.menu.menu_agent_top_bar, menu);\r\n        MenuItem searchItem = menu.findItem(R.id.search_ic);\r\n        SearchView searchView = (SearchView) searchItem.getActionView();\r\n        createDialog();\r\n        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\r\n            @Override\r\n            public boolean onQueryTextSubmit(String query) {\r\n                return false;\r\n            }\r\n\r\n            @Override\r\n            public boolean onQueryTextChange(String newText) {\r\n                adapter.getFilter().filter(newText);\r\n\r\n                return false;\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\r\n        switch (item.getItemId()) {\r\n            case R.id.setting_item:\r\n                Intent intentSetting = new Intent(this.getBaseContext(), SettingActivity.class);\r\n                startActivity(intentSetting);\r\n                break;\r\n            case R.id.history_item:\r\n                Intent intentHistory = new Intent(this.getBaseContext(), HistoryActivity.class);\r\n                startActivity(intentHistory);\r\n                break;\r\n            case R.id.station_item:\r\n                showDialog();\r\n                break;\r\n            case R.id.cylinder_recieve_item:\r\n                Intent intentCylindersReceive = new Intent(this.getBaseContext(), CylindersReceiveActivity.class);\r\n                startActivity(intentCylindersReceive);\r\n\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n    private void createDialog() {\r\n        stationDialog = new Dialog(mBinding.getRoot().getContext());\r\n        stationDialog.setContentView(R.layout.station_dialoge_details);\r\n        stationDialog.getWindow().setBackgroundDrawableResource(R.color.transparent);\r\n        Window window = stationDialog.getWindow();\r\n        window.setGravity(Gravity.CENTER);\r\n        window.getAttributes().windowAnimations = R.style.DialogAnimation;\r\n        stationDialog.setCancelable(true);\r\n        window.setLayout(ActionBar.LayoutParams.WRAP_CONTENT, ActionBar.LayoutParams.WRAP_CONTENT);\r\n    }\r\n\r\n    private void showDialog() {\r\n        stationDialog.show();\r\n        stationDialog.findViewById(R.id.btn_okay).setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                stationDialog.dismiss();\r\n            }\r\n        });\r\n        stationDialog.findViewById(R.id.tv_phone_call_station_dialog).setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                stationDialog.dismiss();\r\n                checkPermission();\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void checkPermission() {\r\n        if (ActivityCompat.checkSelfPermission(getApplicationContext(), Manifest.permission.CALL_PHONE) != PackageManager.PERMISSION_GRANTED) {\r\n            ActivityCompat.requestPermissions((Activity) mBinding.getRoot().getContext(), new String[]{Manifest.permission.CALL_PHONE}, CALL_PERMISSION);\r\n            return;\r\n        }\r\n        startCalling();\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull @NotNull String[] permissions, @NonNull @NotNull int[] grantResults) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n        switch (requestCode) {\r\n            case CALL_PERMISSION:\r\n                if (permissions.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                    startCalling();\r\n                }\r\n        }\r\n    }\r\n\r\n    private void startCalling() {\r\n\r\n        TextView tvCallNumber = stationDialog.findViewById(R.id.tv_phone_call_station_dialog);\r\n        Intent callIntent = new Intent(Intent.ACTION_CALL, Uri.parse(\"tel:\" + tvCallNumber.getText().toString()));\r\n        startActivity(callIntent);\r\n    }\r\n    private void getAction() {\r\n\r\n        mCollectionRefAction.whereEqualTo(CollectionName.Fields.actionDate.name(), String.valueOf(new java.sql.Date(System.currentTimeMillis())))\r\n                .whereEqualTo(CollectionName.Fields.neighborhoodDetails.name() + \".\" + CollectionName.Fields.name.name(), \"Mousa Street\")\r\n                .get().addOnSuccessListener(new OnSuccessListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onSuccess(QuerySnapshot queryDocumentSnapshots) {\r\n                if (!queryDocumentSnapshots.isEmpty()) {\r\n                    idAction =queryDocumentSnapshots.getDocuments().get(0).getId().toString();\r\n                    sellingPrice = queryDocumentSnapshots.getDocuments().get(0).getLong(CollectionName.Fields.sellingPrice.name().toString());\r\n\r\n                    getActionDetails();\r\n\r\n                } else {\r\n                    mBinding.progressWhileLoading.setVisibility(View.GONE);\r\n                    Toast.makeText(getBaseContext(), \"no Action today\", Toast.LENGTH_SHORT).show();\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getActionDetails() {\r\n        mCollectionRefAction.document(idAction).collection(CollectionName.ACTION_DETAILS.name())\r\n                .whereEqualTo(CollectionName.Fields.deliveredState.name() + \".\" + CollectionName.Fields.aqelVerified, true)\r\n                .whereEqualTo(CollectionName.Fields.deliveredState.name() + \".\" + CollectionName.Fields.repVerified, true)\r\n                .addSnapshotListener(new EventListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onEvent(@Nullable QuerySnapshot queryDocumentSnapshots, @Nullable FirebaseFirestoreException e) {\r\n                        if (e != null) {\r\n                            Log.e(TAG, e.toString());\r\n                        }\r\n                        if (queryDocumentSnapshots.isEmpty()) {\r\n                            adapter = null ;\r\n                            detailsItems.clear();\r\n                            initRV();\r\n                            mBinding.progressWhileLoading.setVisibility(View.GONE);\r\n                            Toast.makeText(getBaseContext(), \"no Items\", Toast.LENGTH_SHORT).show();\r\n                        } else {\r\n                            adapter = null ;\r\n                            detailsItems.clear();\r\n                            for (QueryDocumentSnapshot q : queryDocumentSnapshots) {\r\n\r\n                                CitizenActionDetails actionDetails = q.toObject(CitizenActionDetails.class);\r\n                                actionDetails.setDocumentId(q.getId());\r\n                                detailsItems.add(actionDetails);\r\n                            }\r\n                            initRV();\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/GMS/agent/activities/AgentActivity.java b/app/src/main/java/com/GMS/agent/activities/AgentActivity.java
--- a/app/src/main/java/com/GMS/agent/activities/AgentActivity.java	(revision e48385add5514f822590ef11b35c51f6c5d0bd16)
+++ b/app/src/main/java/com/GMS/agent/activities/AgentActivity.java	(date 1639558595414)
@@ -34,13 +34,11 @@
 import com.GMS.HistoryActivity;
 import com.GMS.R;
 import com.GMS.SettingActivity;
-import com.GMS.agent.adapters.ItemClickListener;
 import com.GMS.agent.adapters.RecyclerViewAdapterCitizen;
-import com.GMS.agent.helperClasses.CitizenItem;
 import com.GMS.databinding.ActivityAgentBinding;
+import com.GMS.databinding.RecievingDialogBinding;
 import com.GMS.firebaseFireStore.CitizenActionDetails;
 import com.GMS.firebaseFireStore.CollectionName;
-import com.GMS.representative.adapters.RecyclerViewRepAdapterCitizen;
 import com.google.android.gms.tasks.OnSuccessListener;
 import com.google.firebase.firestore.CollectionReference;
 import com.google.firebase.firestore.EventListener;
@@ -48,10 +46,12 @@
 import com.google.firebase.firestore.FirebaseFirestoreException;
 import com.google.firebase.firestore.QueryDocumentSnapshot;
 import com.google.firebase.firestore.QuerySnapshot;
+import com.google.firebase.firestore.SetOptions;
 
 import org.jetbrains.annotations.NotNull;
 
 import java.util.ArrayList;
+import java.util.Map;
 
 public class AgentActivity extends AppCompatActivity {
 
@@ -63,6 +63,7 @@
 
     public static Drawable mAcceptedBackgroundImage;
     private Dialog stationDialog;
+    private Dialog moneyDialog;
     private static final int CALL_PERMISSION = 122;
     String idAction;
     long sellingPrice ;
@@ -82,7 +83,7 @@
         mAcceptedBackgroundImage = getDrawable(R.drawable.accpted_image_background_shape);
         // change color of status bar color
         this.getWindow().setStatusBarColor(getResources().getColor(R.color.colorPrimary));
-
+        createMoneyDialog();
         setSupportActionBar(mBinding.agentTopBar.toolBarAgent);
         setTitle("Agent");
         mBinding.cardViewHeaderContainer.setBackgroundColor(Color.TRANSPARENT);
@@ -119,7 +120,7 @@
         mItemClickListener = new CitizenItemClickListener() {
             @Override
             public void onClick(int position) {
-
+            showMoneyDialog(position);
             }
         };
 
@@ -158,7 +159,7 @@
         getMenuInflater().inflate(R.menu.menu_agent_top_bar, menu);
         MenuItem searchItem = menu.findItem(R.id.search_ic);
         SearchView searchView = (SearchView) searchItem.getActionView();
-        createDialog();
+        createStationDialog();
         searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
             @Override
             public boolean onQueryTextSubmit(String query) {
@@ -200,7 +201,7 @@
         return super.onOptionsItemSelected(item);
     }
 
-    private void createDialog() {
+    private void createStationDialog() {
         stationDialog = new Dialog(mBinding.getRoot().getContext());
         stationDialog.setContentView(R.layout.station_dialoge_details);
         stationDialog.getWindow().setBackgroundDrawableResource(R.color.transparent);
@@ -281,6 +282,7 @@
         mCollectionRefAction.document(idAction).collection(CollectionName.ACTION_DETAILS.name())
                 .whereEqualTo(CollectionName.Fields.deliveredState.name() + "." + CollectionName.Fields.aqelVerified, true)
                 .whereEqualTo(CollectionName.Fields.deliveredState.name() + "." + CollectionName.Fields.repVerified, true)
+                .whereEqualTo(CollectionName.Fields.deliveredState.name() + "." + CollectionName.Fields.delivered, false)
                 .addSnapshotListener(new EventListener<QuerySnapshot>() {
                     @Override
                     public void onEvent(@Nullable QuerySnapshot queryDocumentSnapshots, @Nullable FirebaseFirestoreException e) {
@@ -307,4 +309,49 @@
                     }
                 });
     }
+
+    private void createMoneyDialog()
+    {
+        moneyDialog = new Dialog(mBinding.getRoot().getContext());
+        moneyDialog.setContentView(R.layout.recieving_dialog);
+        moneyDialog.getWindow().setBackgroundDrawableResource(R.color.transparent);
+        Window window = moneyDialog.getWindow();
+        window.setGravity(Gravity.CENTER);
+       // window.getAttributes().windowAnimations = R.style.DialogAnimation;
+        moneyDialog.setCancelable(true);
+        window.setLayout(ActionBar.LayoutParams.WRAP_CONTENT, ActionBar.LayoutParams.WRAP_CONTENT);
+    }
+    private void showMoneyDialog(int position)
+    {
+        moneyDialog.show();
+        moneyDialog.findViewById(R.id.tv_accept).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                moneyHaveTaken(position);
+            }
+        });
+        moneyDialog.findViewById(R.id.tv_cancel).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                moneyDialog.dismiss();
+            }
+        });
+    }
+
+    private void moneyHaveTaken(int position) {
+        CitizenActionDetails citizenActionDetails = detailsItems.get(position);
+        Map<String ,Object> updateState = citizenActionDetails.getDeliveredState();
+        updateState.put(CollectionName.Fields.delivered.name(), true);
+        citizenActionDetails.setDeliveredState(updateState);
+        mCollectionRefAction.document(idAction).collection(CollectionName.ACTION_DETAILS.name())
+                .document(detailsItems.get(position).getDocumentId()).set(citizenActionDetails , SetOptions.merge())
+                .addOnSuccessListener(new OnSuccessListener<Void>() {
+                    @Override
+                    public void onSuccess(Void unused) {
+                        Toast.makeText(mBinding.getRoot().getContext().getApplicationContext(), "Verified", Toast.LENGTH_SHORT).show();
+
+                    }
+                });
+        moneyDialog.dismiss();
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/GMS/representative/fragments/VerifiedRepFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.GMS.representative.fragments;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.widget.SearchView;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.GMS.GeneralClasses.CitizenItemClickListener;\r\nimport com.GMS.R;\r\nimport com.GMS.databinding.FragmentVerifiedRepBinding;\r\nimport com.GMS.firebaseFireStore.CitizenActionDetails;\r\nimport com.GMS.firebaseFireStore.CollectionName;\r\nimport com.GMS.representative.adapters.RecyclerViewRepAdapterCitizen;\r\nimport com.GMS.representative.helperClass.CitizenItemOfRep;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class VerifiedRepFragment extends Fragment {\r\n\r\n\r\n    public static final int FRAGMENT_ID = 2;\r\n    RecyclerViewRepAdapterCitizen adapter;\r\n    FragmentVerifiedRepBinding mBinding;\r\n    CitizenItemClickListener mItemClickListener;\r\n    long sellingPrice ;\r\n    private static int Qty;\r\n    ArrayList<CitizenActionDetails> detailsItems = new ArrayList<>();\r\n    private final FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private final CollectionReference mCollectionRef = db.collection(CollectionName.CITIZENS.name());\r\n    private final CollectionReference mCollectionRefNeighborhood = db.collection(CollectionName.NEIGHBORHOODS.name());\r\n    private final CollectionReference mCollectionRefAction = db.collection(CollectionName.ACTIONS.name());\r\n    private final CollectionReference mCollectionRefActionDetails = db.collection(CollectionName.ACTION_DETAILS.name());\r\n    String idAction;\r\n    public VerifiedRepFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        mBinding = FragmentVerifiedRepBinding.inflate(inflater, container, false);\r\n\r\n     getAction();\r\n        mItemClickListener = new CitizenItemClickListener() {\r\n            @Override\r\n            public void onClick(int position) {\r\n               Toast.makeText(mBinding.getRoot().getContext() , \"not yet\" , Toast.LENGTH_SHORT).show();\r\n            }\r\n        };\r\n        return mBinding.getRoot();\r\n    }\r\n    private void initRV()\r\n    {\r\n        mBinding.progressWhileLoading.setVisibility(View.GONE);\r\n        adapter = new RecyclerViewRepAdapterCitizen(detailsItems, FRAGMENT_ID , mItemClickListener);\r\n        RecyclerView.LayoutManager layoutManager = new LinearLayoutManager(getContext());\r\n        mBinding.rvVerifiedFragment.setHasFixedSize(true);\r\n        mBinding.rvVerifiedFragment.setLayoutManager(layoutManager);\r\n        mBinding.rvVerifiedFragment.setAdapter(adapter);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(@Nullable @org.jetbrains.annotations.Nullable Bundle savedInstanceState) {\r\n        setHasOptionsMenu(true);\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n    @Override\r\n    public void onCreateOptionsMenu(@NonNull @NotNull Menu menu, @NonNull @NotNull MenuInflater inflater) {\r\n        inflater.inflate(R.menu.search_item_menu, menu);\r\n        MenuItem searchItem = menu.findItem(R.id.search_ic);\r\n        SearchView searchView = (SearchView) searchItem.getActionView();\r\n\r\n        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\r\n            @Override\r\n            public boolean onQueryTextSubmit(String query) {\r\n                adapter.getFilter().filter(query);\r\n                return false;\r\n            }\r\n\r\n            @Override\r\n            public boolean onQueryTextChange(String newText) {\r\n                adapter.getFilter().filter(newText);\r\n                return false;\r\n            }\r\n\r\n        });\r\n        super.onCreateOptionsMenu(menu, inflater);\r\n    }\r\n    private void getAction() {\r\n\r\n        mCollectionRefAction.whereEqualTo(CollectionName.Fields.actionDate.name(), String.valueOf(new java.sql.Date(System.currentTimeMillis())))\r\n                .whereEqualTo(CollectionName.Fields.neighborhoodDetails.name() + \".\" + CollectionName.Fields.name.name(), \"Mousa Street\")\r\n                .get().addOnSuccessListener(new OnSuccessListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onSuccess(QuerySnapshot queryDocumentSnapshots) {\r\n                if (!queryDocumentSnapshots.isEmpty()) {\r\n                    idAction = queryDocumentSnapshots.getDocuments().get(0).getId();\r\n                    sellingPrice= queryDocumentSnapshots.getDocuments().get(0).getLong(CollectionName.Fields.sellingPrice.name().toString());\r\n\r\n                    getActionDetails();\r\n\r\n                } else {\r\n                    mBinding.progressWhileLoading.setVisibility(View.GONE);\r\n                    Toast.makeText(getContext().getApplicationContext(), \"no Action today\", Toast.LENGTH_SHORT).show();\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n    private void getActionDetails() {\r\n        mCollectionRefAction.document(idAction).collection(CollectionName.ACTION_DETAILS.name())\r\n                .whereEqualTo(CollectionName.Fields.deliveredState.name() + \".\" + CollectionName.Fields.aqelVerified, true)\r\n                .whereEqualTo(CollectionName.Fields.deliveredState.name() + \".\" + CollectionName.Fields.repVerified, true)\r\n\r\n                .addSnapshotListener(new EventListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onEvent(@Nullable QuerySnapshot queryDocumentSnapshots, @Nullable FirebaseFirestoreException e) {\r\n                        if (e != null) {\r\n                            Log.e(TAG, e.toString());\r\n                        }\r\n                        if (queryDocumentSnapshots.isEmpty()) {\r\n                            adapter= null ;\r\n                            detailsItems.clear();\r\n                            mBinding.progressWhileLoading.setVisibility(View.GONE);\r\n                            Toast.makeText(getContext().getApplicationContext(), \"no Items\", Toast.LENGTH_SHORT).show();\r\n                        } else {\r\n                            adapter = null ;\r\n                            detailsItems.clear();\r\n                            for (QueryDocumentSnapshot q : queryDocumentSnapshots) {\r\n\r\n                                CitizenActionDetails actionDetails = q.toObject(CitizenActionDetails.class);\r\n                                actionDetails.setDocumentId(q.getId());\r\n                                detailsItems.add(actionDetails);\r\n                                Toast.makeText(getContext().getApplicationContext(), q.getId(), Toast.LENGTH_SHORT).show();\r\n\r\n                            }\r\n                            initRV();\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/GMS/representative/fragments/VerifiedRepFragment.java b/app/src/main/java/com/GMS/representative/fragments/VerifiedRepFragment.java
--- a/app/src/main/java/com/GMS/representative/fragments/VerifiedRepFragment.java	(revision e48385add5514f822590ef11b35c51f6c5d0bd16)
+++ b/app/src/main/java/com/GMS/representative/fragments/VerifiedRepFragment.java	(date 1639409271064)
@@ -25,7 +25,6 @@
 import com.GMS.firebaseFireStore.CitizenActionDetails;
 import com.GMS.firebaseFireStore.CollectionName;
 import com.GMS.representative.adapters.RecyclerViewRepAdapterCitizen;
-import com.GMS.representative.helperClass.CitizenItemOfRep;
 import com.google.android.gms.tasks.OnSuccessListener;
 import com.google.firebase.firestore.CollectionReference;
 import com.google.firebase.firestore.EventListener;
@@ -45,7 +44,7 @@
     RecyclerViewRepAdapterCitizen adapter;
     FragmentVerifiedRepBinding mBinding;
     CitizenItemClickListener mItemClickListener;
-    long sellingPrice ;
+    long sellingPrice;
     private static int Qty;
     ArrayList<CitizenActionDetails> detailsItems = new ArrayList<>();
     private final FirebaseFirestore db = FirebaseFirestore.getInstance();
@@ -54,6 +53,7 @@
     private final CollectionReference mCollectionRefAction = db.collection(CollectionName.ACTIONS.name());
     private final CollectionReference mCollectionRefActionDetails = db.collection(CollectionName.ACTION_DETAILS.name());
     String idAction;
+
     public VerifiedRepFragment() {
         // Required empty public constructor
     }
@@ -64,19 +64,19 @@
         // Inflate the layout for this fragment
         mBinding = FragmentVerifiedRepBinding.inflate(inflater, container, false);
 
-     getAction();
+        getAction();
         mItemClickListener = new CitizenItemClickListener() {
             @Override
             public void onClick(int position) {
-               Toast.makeText(mBinding.getRoot().getContext() , "not yet" , Toast.LENGTH_SHORT).show();
+                Toast.makeText(mBinding.getRoot().getContext(), "not yet", Toast.LENGTH_SHORT).show();
             }
         };
         return mBinding.getRoot();
     }
-    private void initRV()
-    {
+
+    private void initRV() {
         mBinding.progressWhileLoading.setVisibility(View.GONE);
-        adapter = new RecyclerViewRepAdapterCitizen(detailsItems, FRAGMENT_ID , mItemClickListener);
+        adapter = new RecyclerViewRepAdapterCitizen(detailsItems, FRAGMENT_ID, mItemClickListener);
         RecyclerView.LayoutManager layoutManager = new LinearLayoutManager(getContext());
         mBinding.rvVerifiedFragment.setHasFixedSize(true);
         mBinding.rvVerifiedFragment.setLayoutManager(layoutManager);
@@ -112,6 +112,7 @@
         });
         super.onCreateOptionsMenu(menu, inflater);
     }
+
     private void getAction() {
 
         mCollectionRefAction.whereEqualTo(CollectionName.Fields.actionDate.name(), String.valueOf(new java.sql.Date(System.currentTimeMillis())))
@@ -121,7 +122,7 @@
             public void onSuccess(QuerySnapshot queryDocumentSnapshots) {
                 if (!queryDocumentSnapshots.isEmpty()) {
                     idAction = queryDocumentSnapshots.getDocuments().get(0).getId();
-                    sellingPrice= queryDocumentSnapshots.getDocuments().get(0).getLong(CollectionName.Fields.sellingPrice.name().toString());
+                    sellingPrice = queryDocumentSnapshots.getDocuments().get(0).getLong(CollectionName.Fields.sellingPrice.name());
 
                     getActionDetails();
 
@@ -133,11 +134,10 @@
             }
         });
     }
+
     private void getActionDetails() {
         mCollectionRefAction.document(idAction).collection(CollectionName.ACTION_DETAILS.name())
-                .whereEqualTo(CollectionName.Fields.deliveredState.name() + "." + CollectionName.Fields.aqelVerified, true)
                 .whereEqualTo(CollectionName.Fields.deliveredState.name() + "." + CollectionName.Fields.repVerified, true)
-
                 .addSnapshotListener(new EventListener<QuerySnapshot>() {
                     @Override
                     public void onEvent(@Nullable QuerySnapshot queryDocumentSnapshots, @Nullable FirebaseFirestoreException e) {
@@ -145,21 +145,19 @@
                             Log.e(TAG, e.toString());
                         }
                         if (queryDocumentSnapshots.isEmpty()) {
-                            adapter= null ;
+                            adapter = null;
                             detailsItems.clear();
                             mBinding.progressWhileLoading.setVisibility(View.GONE);
                             Toast.makeText(getContext().getApplicationContext(), "no Items", Toast.LENGTH_SHORT).show();
                         } else {
-                            adapter = null ;
+                            adapter = null;
                             detailsItems.clear();
                             for (QueryDocumentSnapshot q : queryDocumentSnapshots) {
 
                                 CitizenActionDetails actionDetails = q.toObject(CitizenActionDetails.class);
                                 actionDetails.setDocumentId(q.getId());
                                 detailsItems.add(actionDetails);
-                                Toast.makeText(getContext().getApplicationContext(), q.getId(), Toast.LENGTH_SHORT).show();
-
-                            }
+                              }
                             initRV();
                         }
                     }
Index: app/src/main/java/com/GMS/representative/fragments/NeedScanRepFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.GMS.representative.fragments;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.widget.SearchView;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Toast;\r\n\r\nimport com.GMS.GeneralClasses.CitizenItemClickListener;\r\nimport com.GMS.R;\r\n\r\nimport com.GMS.databinding.FragmentNeedScanRepBinding;\r\nimport com.GMS.firebaseFireStore.CitizenActionDetails;\r\nimport com.GMS.firebaseFireStore.CollectionName;\r\nimport com.GMS.representative.adapters.RecyclerViewRepAdapterCitizen;\r\nimport com.GMS.representative.helperClass.CitizenItemOfRep;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.firebase.firestore.SetOptions;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Map;\r\n\r\n\r\npublic class NeedScanRepFragment extends Fragment {\r\n\r\n    public static final  int FRAGMENT_ID=1 ;\r\n    FragmentNeedScanRepBinding mBinding ;\r\n    RecyclerViewRepAdapterCitizen adapter ;\r\n    String idAction;\r\n    long sellingPrice ;\r\n    CitizenItemClickListener mItemClickListener;\r\n    ArrayList<CitizenActionDetails> detailsItems = new ArrayList<>();\r\n    private final FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private final CollectionReference mCollectionRef = db.collection(CollectionName.CITIZENS.name());\r\n    private final CollectionReference mCollectionRefNeighborhood = db.collection(CollectionName.NEIGHBORHOODS.name());\r\n    private final CollectionReference mCollectionRefAction = db.collection(CollectionName.ACTIONS.name());\r\n    private final CollectionReference mCollectionRefActionDetails = db.collection(CollectionName.ACTION_DETAILS.name());\r\n    public NeedScanRepFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        mBinding = FragmentNeedScanRepBinding.inflate(inflater , container , false);\r\n\r\n            getAction();\r\n        mItemClickListener = new CitizenItemClickListener() {\r\n            @Override\r\n            public void onClick(int position) {\r\n               verifiedCitizen(position);\r\n            }\r\n        };\r\n\r\n\r\n        return mBinding.getRoot();\r\n    }\r\n    public  void initRV()\r\n    {\r\n        mBinding.progressWhileLoading.setVisibility(View.GONE);\r\n        adapter = new RecyclerViewRepAdapterCitizen(detailsItems , FRAGMENT_ID , mItemClickListener);\r\n        RecyclerView.LayoutManager layoutManager = new LinearLayoutManager(getContext());\r\n        mBinding.rvNeedScanFragment.setHasFixedSize(true);\r\n        mBinding.rvNeedScanFragment.setLayoutManager(layoutManager);\r\n        mBinding.rvNeedScanFragment.setAdapter(adapter);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(@Nullable @org.jetbrains.annotations.Nullable Bundle savedInstanceState) {\r\n        setHasOptionsMenu(true);\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n    @Override\r\n    public void onCreateOptionsMenu(@NonNull @NotNull Menu menu, @NonNull @NotNull MenuInflater inflater) {\r\n        inflater.inflate(R.menu.search_item_menu , menu);\r\n        MenuItem searchItem = menu.findItem(R.id.search_ic);\r\n        SearchView searchView= (SearchView) searchItem.getActionView();\r\n\r\n        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\r\n            @Override\r\n            public boolean onQueryTextSubmit(String query) {\r\n                adapter.getFilter().filter(query);\r\n                return false;\r\n            }\r\n\r\n            @Override\r\n            public boolean onQueryTextChange(String newText) {\r\n                adapter.getFilter().filter(newText);\r\n                return false;\r\n            }\r\n\r\n        });\r\n        super.onCreateOptionsMenu(menu, inflater);\r\n    }\r\n    private void getAction() {\r\n\r\n        mCollectionRefAction.whereEqualTo(CollectionName.Fields.actionDate.name(), String.valueOf(new java.sql.Date(System.currentTimeMillis())))\r\n                .whereEqualTo(CollectionName.Fields.neighborhoodDetails.name() + \".\" + CollectionName.Fields.name.name(), \"Mousa Street\")\r\n                .get().addOnSuccessListener(new OnSuccessListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onSuccess(QuerySnapshot queryDocumentSnapshots) {\r\n                if (!queryDocumentSnapshots.isEmpty()) {\r\n                    idAction =queryDocumentSnapshots.getDocuments().get(0).getId().toString();\r\n                    sellingPrice = queryDocumentSnapshots.getDocuments().get(0).getLong(CollectionName.Fields.sellingPrice.name().toString());\r\n\r\n                    getActionDetails();\r\n\r\n                } else {\r\n                    mBinding.progressWhileLoading.setVisibility(View.GONE);\r\n                    Toast.makeText(getContext().getApplicationContext(), \"no Action today\", Toast.LENGTH_SHORT).show();\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getActionDetails() {\r\n        mCollectionRefAction.document(idAction).collection(CollectionName.ACTION_DETAILS.name())\r\n                .whereEqualTo(CollectionName.Fields.deliveredState.name() + \".\" + CollectionName.Fields.aqelVerified, true)\r\n                .whereEqualTo(CollectionName.Fields.deliveredState.name() + \".\" + CollectionName.Fields.repVerified, false)\r\n                .addSnapshotListener(new EventListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onEvent(@Nullable QuerySnapshot queryDocumentSnapshots, @Nullable FirebaseFirestoreException e) {\r\n                        if (e != null) {\r\n                            Log.e(TAG, e.toString());\r\n                        }\r\n                        if (queryDocumentSnapshots.isEmpty()) {\r\n                            adapter = null ;\r\n                            detailsItems.clear();\r\n                            initRV();\r\n                            mBinding.progressWhileLoading.setVisibility(View.GONE);\r\n                            Toast.makeText(getContext().getApplicationContext(), \"no Items\", Toast.LENGTH_SHORT).show();\r\n                        } else {\r\n                            adapter = null ;\r\n                            detailsItems.clear();\r\n                            for (QueryDocumentSnapshot q : queryDocumentSnapshots) {\r\n\r\n                                CitizenActionDetails actionDetails = q.toObject(CitizenActionDetails.class);\r\n                                actionDetails.setDocumentId(q.getId());\r\n                                detailsItems.add(actionDetails);\r\n                            }\r\n                            initRV();\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n    private void verifiedCitizen(int position) {\r\n\r\n           CitizenActionDetails citizenActionDetails = detailsItems.get(position);\r\n            Map<String ,Object> updateState = citizenActionDetails.getDeliveredState();\r\n            updateState.put(CollectionName.Fields.repVerified.name(), true);\r\n            citizenActionDetails.setDeliveredState(updateState);\r\n\r\n            mCollectionRefAction.document(idAction).collection(CollectionName.ACTION_DETAILS.name())\r\n                    .document(detailsItems.get(position).getDocumentId()).set(citizenActionDetails , SetOptions.merge())\r\n                    .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                        @Override\r\n                        public void onSuccess(Void unused) {\r\n                            Toast.makeText(getActivity(), \"Verified\", Toast.LENGTH_SHORT).show();\r\n\r\n                        }\r\n                    });\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/GMS/representative/fragments/NeedScanRepFragment.java b/app/src/main/java/com/GMS/representative/fragments/NeedScanRepFragment.java
--- a/app/src/main/java/com/GMS/representative/fragments/NeedScanRepFragment.java	(revision e48385add5514f822590ef11b35c51f6c5d0bd16)
+++ b/app/src/main/java/com/GMS/representative/fragments/NeedScanRepFragment.java	(date 1639377460395)
@@ -141,7 +141,6 @@
 
     private void getActionDetails() {
         mCollectionRefAction.document(idAction).collection(CollectionName.ACTION_DETAILS.name())
-                .whereEqualTo(CollectionName.Fields.deliveredState.name() + "." + CollectionName.Fields.aqelVerified, true)
                 .whereEqualTo(CollectionName.Fields.deliveredState.name() + "." + CollectionName.Fields.repVerified, false)
                 .addSnapshotListener(new EventListener<QuerySnapshot>() {
                     @Override
Index: app/src/main/res/layout/activity_aqel.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".aqel.activities.AqelActivity\">\r\n\r\n    <include\r\n        android:id=\"@+id/tool_bar\"\r\n        layout=\"@layout/top_bar_aqel\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n\r\n    <com.google.android.material.tabs.TabLayout\r\n        android:id=\"@+id/tab_layout_aqel\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_margin=\"0dp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/tool_bar\"\r\n        app:tabGravity=\"center\"\r\n        app:tabSelectedTextColor=\"@color/white\"\r\n        app:tabIndicator=\"@drawable/tab_indictor\"\r\n        app:tabIndicatorAnimationMode=\"elastic\"\r\n        app:tabIndicatorGravity=\"stretch\"\r\n        app:tabMode=\"fixed\"\r\n        android:background=\"@color/transparent\"/>\r\n\r\n    <androidx.core.widget.NestedScrollView\r\n        android:id=\"@+id/login_nestedScrollView\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"0dp\"\r\n        android:fillViewport=\"true\"\r\n        android:scrollbars=\"vertical\"\r\n        android:scrollbarStyle=\"insideOverlay\"\r\n        app:layout_behavior=\"com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/tab_layout_aqel\">\r\n\r\n        <androidx.viewpager2.widget.ViewPager2\r\n            android:id=\"@+id/main_view_pager\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\" />\r\n    </androidx.core.widget.NestedScrollView>\r\n\r\n    <com.google.android.material.floatingactionbutton.FloatingActionButton\r\n        android:id=\"@+id/fab_scan\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_margin=\"16dp\"\r\n        android:backgroundTint=\"@color/colorPrimaryDark\"\r\n        android:src=\"@drawable/ic_qr_need_scan_mobile\"\r\n        app:borderWidth=\"0dp\"\r\n        app:fabSize=\"normal\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_aqel.xml b/app/src/main/res/layout/activity_aqel.xml
--- a/app/src/main/res/layout/activity_aqel.xml	(revision e48385add5514f822590ef11b35c51f6c5d0bd16)
+++ b/app/src/main/res/layout/activity_aqel.xml	(date 1639555468424)
@@ -31,7 +31,7 @@
         android:background="@color/transparent"/>
 
     <androidx.core.widget.NestedScrollView
-        android:id="@+id/login_nestedScrollView"
+        android:id="@+id/activity_aqel_nested_scroll_view"
         android:layout_width="0dp"
         android:layout_height="0dp"
         android:fillViewport="true"
Index: app/src/main/java/com/GMS/GeneralAdapters/RecyclerViewAdapterDetailsHistory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.GMS.GeneralAdapters;\r\n\r\nimport android.content.Context;\r\nimport android.transition.AutoTransition;\r\nimport android.transition.TransitionManager;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport com.GMS.GeneralClasses.ActionDetailsCitizen;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.GMS.R;\r\nimport com.GMS.databinding.DetailsItemBinding;\r\nimport com.GMS.databinding.HistoryItemBinding;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class RecyclerViewAdapterDetailsHistory extends RecyclerView.Adapter<RecyclerViewAdapterDetailsHistory.DetailsViewHolder> {\r\n\r\n    ArrayList <ActionDetailsCitizen> items = new ArrayList<>();\r\n    Context mContext;\r\n\r\n    public RecyclerViewAdapterDetailsHistory(ArrayList<ActionDetailsCitizen> items, Context mContext) {\r\n        this.items = items;\r\n        this.mContext = mContext;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public DetailsViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        return  new DetailsViewHolder(DetailsItemBinding.inflate(LayoutInflater.from(parent.getContext()) , parent , false));\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull DetailsViewHolder holder, int position) {\r\n\r\n        ActionDetailsCitizen item = items.get(position);\r\n        holder.mDetailsItemBinding.tvCitizenName.setText(item.getCitizenName());\r\n        holder.mDetailsItemBinding.tvQty.setText(String.valueOf(item.getQty()));\r\n        holder.mDetailsItemBinding.tvAqelName.setText(item.getAqelName());\r\n        holder.mDetailsItemBinding.tvRepName.setText(item.getRepName());\r\n        holder.mDetailsItemBinding.ibShow.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if(holder.mDetailsItemBinding.viewSeparator.getVisibility()==View.VISIBLE)\r\n                {\r\n                    holder.mDetailsItemBinding.viewSeparator.setVisibility(View.GONE);\r\n\r\n                }\r\n                else\r\n                {\r\n                    holder.mDetailsItemBinding.viewSeparator.setVisibility(View.VISIBLE);\r\n                }\r\n                if( holder.mDetailsItemBinding.childContainer.getVisibility()==View.VISIBLE) {\r\n                    TransitionManager.beginDelayedTransition( holder.mDetailsItemBinding.containerParent , new AutoTransition());\r\n                    holder.mDetailsItemBinding.childContainer.setVisibility(View.GONE);\r\n                    holder.mDetailsItemBinding.ibShow.setImageResource(R.drawable.ic_down_arrow);\r\n                }\r\n                else\r\n                {\r\n                    TransitionManager.beginDelayedTransition( holder.mDetailsItemBinding.containerParent , new AutoTransition());\r\n                    holder.mDetailsItemBinding.childContainer.setVisibility(View.VISIBLE);\r\n                    holder.mDetailsItemBinding.ibShow.setImageResource(R.drawable.ic_top_arrow);\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return items.size();\r\n    }\r\n\r\n    class DetailsViewHolder extends RecyclerView.ViewHolder\r\n    {\r\n        DetailsItemBinding mDetailsItemBinding;\r\n\r\n        public DetailsViewHolder(DetailsItemBinding detailsItemBinding) {\r\n            super(detailsItemBinding.getRoot());\r\n            this.mDetailsItemBinding = detailsItemBinding;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/GMS/GeneralAdapters/RecyclerViewAdapterDetailsHistory.java b/app/src/main/java/com/GMS/GeneralAdapters/RecyclerViewAdapterDetailsHistory.java
--- a/app/src/main/java/com/GMS/GeneralAdapters/RecyclerViewAdapterDetailsHistory.java	(revision e48385add5514f822590ef11b35c51f6c5d0bd16)
+++ b/app/src/main/java/com/GMS/GeneralAdapters/RecyclerViewAdapterDetailsHistory.java	(date 1639559147167)
@@ -12,7 +12,6 @@
 
 import com.GMS.R;
 import com.GMS.databinding.DetailsItemBinding;
-import com.GMS.databinding.HistoryItemBinding;
 
 import java.util.ArrayList;
 
@@ -36,9 +35,9 @@
     public void onBindViewHolder(@NonNull DetailsViewHolder holder, int position) {
 
         ActionDetailsCitizen item = items.get(position);
-        holder.mDetailsItemBinding.tvCitizenName.setText(item.getCitizenName());
-        holder.mDetailsItemBinding.tvQty.setText(String.valueOf(item.getQty()));
-        holder.mDetailsItemBinding.tvAqelName.setText(item.getAqelName());
+        holder.mDetailsItemBinding.tvCitizenName.setText(item.getsCitizenName());
+        holder.mDetailsItemBinding.tvQty.setText(String.valueOf(item.getsQty()));
+        holder.mDetailsItemBinding.tvAqelName.setText(item.getsAqelName());
         holder.mDetailsItemBinding.tvRepName.setText(item.getRepName());
         holder.mDetailsItemBinding.ibShow.setOnClickListener(new View.OnClickListener() {
             @Override
Index: app/src/main/java/com/GMS/representative/activities/RepresentativeActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.GMS.representative.activities;\r\n\r\nimport android.content.Intent;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.viewpager2.widget.ViewPager2;\r\n\r\nimport com.GMS.Constant;\r\nimport com.GMS.QRScannerActivity;\r\nimport com.GMS.R;\r\nimport com.GMS.SettingActivity;\r\nimport com.GMS.databinding.ActivityRepresentativeBinding;\r\nimport com.GMS.firebaseFireStore.CollectionName;\r\nimport com.GMS.representative.adapters.MainAdapter;\r\nimport com.GMS.representative.adapters.ViewPager2Adapter;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.material.tabs.TabLayout;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\npublic class RepresentativeActivity extends AppCompatActivity {\r\n\r\n    public static final int ADDITION_REQUEST_REQ_CODE = 1;\r\n    MenuItem mMenuItemNotification;\r\n    TextView tvNotificationCounter;\r\n    ImageView ivNotificationIcon;\r\n    public static int pendingNotification = 0;\r\n    MainAdapter mAdapter;\r\n    ViewPager2Adapter vpAdapter;\r\n    private final FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private final CollectionReference mCollectionRef = db.collection(CollectionName.CITIZENS.name());\r\n    private final CollectionReference mCollectionRefNeighborhood = db.collection(CollectionName.NEIGHBORHOODS.name());\r\n\r\n    ActivityRepresentativeBinding mBinding;\r\n    private final String REP_ACTIVITY_NOTIFICATION=\"REP_ACTIVITY_NOTIFICATION\";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        mBinding = ActivityRepresentativeBinding.inflate(getLayoutInflater());\r\n        setContentView(mBinding.getRoot());\r\n        // change color of status bar color\r\n        this.getWindow().setStatusBarColor(getResources().getColor(R.color.colorPrimary));\r\n        setSupportActionBar(mBinding.toolBar.toolBarRepresentative);\r\n        setTitle(\"Representative\");\r\n        FragmentManager fm = getSupportFragmentManager();\r\n        vpAdapter = new ViewPager2Adapter(fm, getLifecycle());\r\n        mBinding.mainViewPager.setAdapter(vpAdapter);\r\n        mBinding.tabLayoutRepresentative.addTab(mBinding.tabLayoutRepresentative.newTab().setText(getResources().getString(R.string.need_scan)));\r\n        mBinding.tabLayoutRepresentative.addTab(mBinding.tabLayoutRepresentative.newTab().setText(getResources().getString(R.string.verified)));\r\n        mBinding.tabLayoutRepresentative.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {\r\n            @Override\r\n            public void onTabSelected(TabLayout.Tab tab) {\r\n                mBinding.mainViewPager.setCurrentItem(tab.getPosition());\r\n                if (mBinding.mainViewPager.getCurrentItem() == 1 || tab.getPosition() == 1) {\r\n                    mBinding.fabScan.setVisibility(View.GONE);\r\n                } else {\r\n                    mBinding.fabScan.setVisibility(View.VISIBLE);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onTabUnselected(TabLayout.Tab tab) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTabReselected(TabLayout.Tab tab) {\r\n\r\n            }\r\n        });\r\n        mBinding.mainViewPager.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {\r\n            @Override\r\n            public void onPageSelected(int position) {\r\n                mBinding.tabLayoutRepresentative.selectTab(mBinding.tabLayoutRepresentative.getTabAt(position));\r\n                if (position == 1) {\r\n                    mBinding.fabScan.setVisibility(View.GONE);\r\n                } else {\r\n                    mBinding.fabScan.setVisibility(View.VISIBLE);\r\n                }\r\n            }\r\n\r\n        });\r\n        mBinding.fabScan.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if (mBinding.tabLayoutRepresentative.getSelectedTabPosition() == 0) {\r\n                    Intent intent = new Intent(mBinding.getRoot().getContext(), QRScannerActivity.class);\r\n                    intent.putExtra(Constant.ACTIVITY.toString(), Constant.REPNEEDSCAN.toString());\r\n                    startActivity(intent);\r\n                }\r\n            }\r\n        });\r\n\r\n        /*\r\n        mAdapter = new MainAdapter(getSupportFragmentManager());\r\n        mAdapter.addFragment(new NeedScanRepFragment() , \"Need Scan\");\r\n        mAdapter.addFragment(new VerifiedRepFragment() , \"Verified\");\r\n        mBinding.mainViewPager.setAdapter(mAdapter);\r\n        mBinding.tabLayoutRepresentative.setupWithViewPager(mBinding.mainViewPager);\r\n        */\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        super.onCreateOptionsMenu(menu);\r\n        getMenuInflater().inflate(R.menu.menu_representative_top_bar, menu);\r\n        mMenuItemNotification = menu.findItem(R.id.notification_addition);\r\n        //checkNotification();\r\n\r\n        return true;\r\n    }\r\n\r\n    private void checkNotification() {\r\n\r\n\r\n        try {\r\n\r\n            if (pendingNotification <= 0) {\r\n                mMenuItemNotification.setActionView(null);\r\n            } else {\r\n                mMenuItemNotification.setActionView(R.layout.notification_layout);\r\n                View view = mMenuItemNotification.getActionView();\r\n                tvNotificationCounter = view.findViewById(R.id.notification_counter);\r\n                ivNotificationIcon = view.findViewById(R.id.iv_notification_icon);\r\n                ivNotificationIcon.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        openAdditionRequestActivity();\r\n                    }\r\n                });\r\n                Drawable mDrawable = getDrawable(R.drawable.notification_counter_shape);\r\n                view.findViewById(R.id.card_view).setBackground(mDrawable);\r\n                tvNotificationCounter.setText(String.valueOf(pendingNotification));\r\n            }\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            Log.e(REP_ACTIVITY_NOTIFICATION , ex.getMessage());\r\n        }\r\n    }\r\n\r\n    private void openAdditionRequestActivity() {\r\n        Intent intent = new Intent(this, AdditionRequestsActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\r\n        super.onOptionsItemSelected(item);\r\n\r\n\r\n        switch (item.getItemId()) {\r\n            case R.id.setting_item:\r\n                Intent intent = new Intent(mBinding.getRoot().getContext(), SettingActivity.class);\r\n                startActivity(intent);\r\n                break;\r\n\r\n            case R.id.notification_addition:\r\n                Toast.makeText(getBaseContext(), item.getTitle().toString(), Toast.LENGTH_SHORT).show();\r\n                openAdditionRequestActivity();\r\n                break;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable @org.jetbrains.annotations.Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        /*\r\n        if (requestCode == ADDITION_REQUEST_REQ_CODE) {\r\n            pendingNotification = data.getIntExtra(\"pendingNotification\", pendingNotification);\r\n            checkNotification();\r\n        }\r\n\r\n         */\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        mBinding = null;\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        /*\r\n        mCollectionRef.whereEqualTo(CollectionName.Fields.state.name(), false).addSnapshotListener(this, new EventListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable QuerySnapshot queryDocumentSnapshots, @Nullable FirebaseFirestoreException e) {\r\n                if (e != null) {\r\n                    return;\r\n                }\r\n                pendingNotification = queryDocumentSnapshots.size();\r\n                checkNotification();\r\n            }\r\n        });\r\n\r\n         */\r\n        mCollectionRefNeighborhood.whereEqualTo(CollectionName.Fields.name.name(), \"Mousa Street\")\r\n                .get().addOnSuccessListener(new OnSuccessListener<QuerySnapshot>() {\r\n           String [] id = new String[1];\r\n            @Override\r\n            public void onSuccess(QuerySnapshot queryDocumentSnapshots) {\r\n                if(!queryDocumentSnapshots.isEmpty())\r\n                {\r\n                    for(QueryDocumentSnapshot q : queryDocumentSnapshots) {\r\n                        id[0] = q.getId();\r\n                        break;\r\n                    }\r\n                    mCollectionRefNeighborhood.document(id[0]).collection(CollectionName.CITIZENS.name()).whereEqualTo(CollectionName.Fields.state.name(), false).addSnapshotListener(new EventListener<QuerySnapshot>() {\r\n                        @Override\r\n                        public void onEvent(@Nullable QuerySnapshot queryDocumentSnapshots, @Nullable FirebaseFirestoreException e) {\r\n                            if (e != null) {\r\n                                return;\r\n                            }\r\n                            pendingNotification = queryDocumentSnapshots.size();\r\n                            checkNotification();\r\n                        }\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/GMS/representative/activities/RepresentativeActivity.java b/app/src/main/java/com/GMS/representative/activities/RepresentativeActivity.java
--- a/app/src/main/java/com/GMS/representative/activities/RepresentativeActivity.java	(revision e48385add5514f822590ef11b35c51f6c5d0bd16)
+++ b/app/src/main/java/com/GMS/representative/activities/RepresentativeActivity.java	(date 1639556410232)
@@ -67,6 +67,7 @@
         mBinding.tabLayoutRepresentative.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
             @Override
             public void onTabSelected(TabLayout.Tab tab) {
+                mBinding.activityRepNestedScrollView.fullScroll(View.FOCUS_UP);
                 mBinding.mainViewPager.setCurrentItem(tab.getPosition());
                 if (mBinding.mainViewPager.getCurrentItem() == 1 || tab.getPosition() == 1) {
                     mBinding.fabScan.setVisibility(View.GONE);
@@ -88,6 +89,7 @@
         mBinding.mainViewPager.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {
             @Override
             public void onPageSelected(int position) {
+                mBinding.activityRepNestedScrollView.fullScroll(View.FOCUS_UP);
                 mBinding.tabLayoutRepresentative.selectTab(mBinding.tabLayoutRepresentative.getTabAt(position));
                 if (position == 1) {
                     mBinding.fabScan.setVisibility(View.GONE);
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/drawable/accpted_image_background_shape.xml\" value=\"0.18796296296296297\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/drawable/action_lable_active_shape.xml\" value=\"0.18796296296296297\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/drawable/cancel_icon.xml\" value=\"0.18796296296296297\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/drawable/circle_progress.xml\" value=\"0.2203125\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/drawable/ic_status_done.xml\" value=\"0.21614583333333334\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/accept_qr_scanner_dialoge.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/actions_recyclerview_item.xml\" value=\"0.1859375\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/activity_account_edit.xml\" value=\"0.1859375\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/activity_action_details.xml\" value=\"0.1859375\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/activity_add_citizen.xml\" value=\"0.17777777777777778\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/activity_addition_requests.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/activity_agent.xml\" value=\"0.19692307692307692\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/activity_aqel_notifications.xml\" value=\"0.1859375\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/activity_cyclinders_recieve.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/activity_cylinders_receive.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/activity_history.xml\" value=\"0.1859375\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/add_dialoge.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/addition_request_item.xml\" value=\"0.20102564102564102\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/citizen_item_rv.xml\" value=\"0.19692307692307692\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/date_identify_layout.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/details_item.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/employees_recyclerview_item.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/fragment_actions.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/fragment_employees.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/fragment_need_scan_aqel.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/fragment_need_scan_rep.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/fragment_verified_aqel.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/fragment_verified_rep.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/history_item.xml\" value=\"0.1859375\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/loading_dialog.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/recieving_dialog.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/see_document_dialog.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/top_bar_aqel.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/verified_item_representative.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/menu/menu_history.xml\" value=\"0.19692307692307692\" />\r\n        <entry key=\"..\\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/menu/search_menu.xml\" value=\"0.18981481481481483\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision e48385add5514f822590ef11b35c51f6c5d0bd16)
+++ b/.idea/misc.xml	(date 1639647273742)
@@ -15,10 +15,12 @@
         <entry key="..\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/activity_add_citizen.xml" value="0.17777777777777778" />
         <entry key="..\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/activity_addition_requests.xml" value="0.20416666666666666" />
         <entry key="..\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/activity_agent.xml" value="0.19692307692307692" />
+        <entry key="..\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/activity_aqel.xml" value="0.20102564102564102" />
         <entry key="..\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/activity_aqel_notifications.xml" value="0.1859375" />
         <entry key="..\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/activity_cyclinders_recieve.xml" value="0.2" />
         <entry key="..\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/activity_cylinders_receive.xml" value="0.2" />
         <entry key="..\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/activity_history.xml" value="0.1859375" />
+        <entry key="..\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/activity_representative.xml" value="0.20102564102564102" />
         <entry key="..\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/add_dialoge.xml" value="0.20416666666666666" />
         <entry key="..\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/addition_request_item.xml" value="0.20102564102564102" />
         <entry key="..\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/citizen_item_rv.xml" value="0.19692307692307692" />
@@ -29,11 +31,12 @@
         <entry key="..\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/fragment_employees.xml" value="0.20416666666666666" />
         <entry key="..\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/fragment_need_scan_aqel.xml" value="0.20416666666666666" />
         <entry key="..\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/fragment_need_scan_rep.xml" value="0.20416666666666666" />
+        <entry key="..\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/fragment_sign_up.xml" value="0.1814814814814815" />
         <entry key="..\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/fragment_verified_aqel.xml" value="0.20416666666666666" />
         <entry key="..\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/fragment_verified_rep.xml" value="0.20416666666666666" />
         <entry key="..\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/history_item.xml" value="0.1859375" />
         <entry key="..\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/loading_dialog.xml" value="0.22" />
-        <entry key="..\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/recieving_dialog.xml" value="0.20416666666666666" />
+        <entry key="..\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/recieving_dialog.xml" value="0.33" />
         <entry key="..\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/see_document_dialog.xml" value="0.20416666666666666" />
         <entry key="..\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/top_bar_aqel.xml" value="0.20416666666666666" />
         <entry key="..\:/Users/Mohammed shihab/ABDULRAHMAN_FOLDER/GMS/app/src/main/res/layout/verified_item_representative.xml" value="0.20416666666666666" />
Index: app/src/main/res/layout/activity_representative.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".representative.activities.RepresentativeActivity\">\r\n\r\n    <include\r\n        android:id=\"@+id/tool_bar\"\r\n        layout=\"@layout/top_bar_representative\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <com.google.android.material.tabs.TabLayout\r\n        android:id=\"@+id/tab_layout_representative\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_margin=\"0dp\"\r\n        android:background=\"@color/transparent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/tool_bar\"\r\n        app:tabGravity=\"center\"\r\n        app:tabIndicator=\"@drawable/tab_indictor\"\r\n        app:tabIndicatorAnimationMode=\"elastic\"\r\n        app:tabIndicatorGravity=\"stretch\"\r\n        app:tabMode=\"fixed\"\r\n        app:tabSelectedTextColor=\"@color/white\" />\r\n\r\n    <androidx.core.widget.NestedScrollView\r\n        android:id=\"@+id/login_nestedScrollView\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"0dp\"\r\n        android:fillViewport=\"true\"\r\n        android:scrollbarStyle=\"insideOverlay\"\r\n        android:scrollbars=\"vertical\"\r\n        app:layout_behavior=\"com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/tab_layout_representative\">\r\n\r\n        <androidx.viewpager2.widget.ViewPager2\r\n            android:id=\"@+id/main_view_pager\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\" />\r\n    </androidx.core.widget.NestedScrollView>\r\n\r\n    <com.google.android.material.floatingactionbutton.FloatingActionButton\r\n        android:id=\"@+id/fab_scan\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_margin=\"16dp\"\r\n        android:backgroundTint=\"@color/colorPrimaryDark\"\r\n        android:src=\"@drawable/ic_qr_need_scan_mobile\"\r\n        app:borderWidth=\"0dp\"\r\n        app:fabSize=\"normal\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_representative.xml b/app/src/main/res/layout/activity_representative.xml
--- a/app/src/main/res/layout/activity_representative.xml	(revision e48385add5514f822590ef11b35c51f6c5d0bd16)
+++ b/app/src/main/res/layout/activity_representative.xml	(date 1639554969179)
@@ -30,7 +30,7 @@
         app:tabSelectedTextColor="@color/white" />
 
     <androidx.core.widget.NestedScrollView
-        android:id="@+id/login_nestedScrollView"
+        android:id="@+id/activity_rep_nested_scroll_view"
         android:layout_width="0dp"
         android:layout_height="0dp"
         android:fillViewport="true"
Index: app/src/main/java/com/GMS/GeneralClasses/Report.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.GMS.GeneralClasses;\r\n\r\nimport android.content.Context;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Color;\r\nimport android.graphics.Paint;\r\nimport android.graphics.Typeface;\r\nimport android.graphics.pdf.PdfDocument;\r\nimport android.os.Environment;\r\nimport android.widget.Toast;\r\n\r\nimport java.io.File;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\n\r\npublic class Report {\r\n    Bitmap bitmap, scaleBitmap;\r\n    private final static int PAGE_WIDTH = 1200;\r\n    private final static int PAGE_HEIGHT = 2010;\r\n    static PdfDocument pdfDocument;\r\n    static PdfDocument.PageInfo myPageInfo;\r\n    static Paint myPaint = new Paint();\r\n    static Paint titlePaint = new Paint();\r\n\r\n    private static Canvas canvas;\r\n    private final static int TOP_START_TEXT_DRAW = 500;\r\n    private final static int POINT_TABLE_TOP_START = 450;\r\n    private  final static int POINT_TABLE_BOTTOM_END = 530;\r\n    private static int topStartTextDraw = TOP_START_TEXT_DRAW;\r\n    private static int pointTableTopStart = POINT_TABLE_TOP_START;\r\n    private static int pointTableBottomEnd = POINT_TABLE_BOTTOM_END;\r\n    private static final int pointXStartTextDraw = 40;\r\n    private static final int locationXLine = 180;\r\n    private static final int stationXLine = 480;\r\n    private static final int priceXLine = 780;\r\n    private static final int totalXLine = 960;\r\n    private static final int QtyTextStartXPoint = 40;\r\n    private static final int locationTextStartXPoint = 200;\r\n    private static final int stationTextStartXPoint = 500;\r\n    private static final int priceTextStartPoint = 800;\r\n    private static final int totalTextStartXPoint = 980;\r\n    private static SimpleDateFormat mSimpleDateFormat = new SimpleDateFormat(\"yyyy_MM_dd_HH_mm_ss\");\r\n\r\n\r\n    public static class Pdf\r\n    {\r\n        public static class Actions{\r\n            public static void  createActions(ArrayList<HistoryItem> mHistoryItems, Context mContext) {\r\n                Report.pdfDocument = new PdfDocument();\r\n                Report.myPageInfo = new PdfDocument.PageInfo.Builder(PAGE_WIDTH, PAGE_HEIGHT, 1).create();\r\n                PdfDocument.Page myPage = pdfDocument.startPage(myPageInfo);\r\n                Date date = new Date();\r\n                myPaint.setStrokeWidth(1200);\r\n                titlePaint.setTextAlign(Paint.Align.CENTER);\r\n                titlePaint.setTypeface(Typeface.create(Typeface.DEFAULT, Typeface.BOLD));\r\n                titlePaint.setTextSize(70);\r\n                canvas = myPage.getCanvas();\r\n\r\n\r\n                canvas.drawText(\"Gas Managements System\", PAGE_WIDTH / 2, 150, titlePaint);\r\n                titlePaint.setTextSize(35f);\r\n                titlePaint.setTextAlign(Paint.Align.LEFT);\r\n                titlePaint.setStyle(Paint.Style.FILL);\r\n                titlePaint.setTypeface(Typeface.create(Typeface.SANS_SERIF, Typeface.BOLD));\r\n                canvas.drawText(\"نوع المستند : تقرير عن الحركات\", 750, 250, titlePaint);\r\n                mSimpleDateFormat = new SimpleDateFormat(\"yyyy-MM-dd HH-mm-s\");\r\n                canvas.drawText(mSimpleDateFormat.format(date), 50, 1950, titlePaint);\r\n                // draw the header of table\r\n                drawCell();\r\n                // draw the title of the head of table\r\n                fillCell(0, \"Qty\", \"Location\", \"Station\", \"Price\", \"Total\");\r\n\r\n                // fill the data in the each raw\r\n                for (int i = 0; i < mHistoryItems.size(); i++) {\r\n                    pointTableTopStart += 80;\r\n                    pointTableBottomEnd += 80;\r\n                    drawCell();\r\n\r\n                    fillCell(1, String.valueOf(mHistoryItems.get(i).getQty())\r\n                            , mHistoryItems.get(i).getLocation()\r\n                            , mHistoryItems.get(i).getStation()\r\n                            , String.valueOf(mHistoryItems.get(i).getPrice())\r\n                            , String.valueOf(mHistoryItems.get(i).getPrice() * mHistoryItems.get(i).getQty()));\r\n\r\n                }\r\n\r\n\r\n                //draw the separator line between the title in the head of table\r\n                canvas.drawLine(locationXLine, POINT_TABLE_TOP_START, locationXLine, pointTableBottomEnd, myPaint);\r\n                canvas.drawLine(stationXLine, POINT_TABLE_TOP_START, stationXLine, pointTableBottomEnd, myPaint);\r\n                canvas.drawLine(priceXLine, POINT_TABLE_TOP_START, priceXLine, pointTableBottomEnd, myPaint);\r\n                canvas.drawLine(totalXLine, POINT_TABLE_TOP_START, totalXLine, pointTableBottomEnd, myPaint);\r\n\r\n\r\n                pdfDocument.finishPage(myPage);\r\n                mSimpleDateFormat = new SimpleDateFormat(\"yyyy_MM_dd_HH_mm_ss\");\r\n                File file = new File(Environment.getExternalStorageDirectory(), \"/\" + mSimpleDateFormat.format(date) + \".pdf\");\r\n                try {\r\n                    pdfDocument.writeTo(new FileOutputStream(file));\r\n                    pdfDocument.close();\r\n                    pdfDocument = null;\r\n                    myPageInfo = null;\r\n                    initMeasurements();\r\n                    Toast.makeText(mContext, \"pdf has saved\", Toast.LENGTH_SHORT).show();\r\n\r\n                } catch (IOException ex) {\r\n                    ex.printStackTrace();\r\n                }\r\n            }\r\n\r\n            private static void drawCell() {\r\n\r\n                myPaint.setStyle(Paint.Style.STROKE);\r\n                myPaint.setStrokeWidth(2);\r\n                myPaint.setColor(Color.BLACK);\r\n\r\n                canvas.drawRect(20, pointTableTopStart, 1180, pointTableBottomEnd, myPaint);\r\n\r\n                titlePaint.setTextSize(35f);\r\n                titlePaint.setTextAlign(Paint.Align.LEFT);\r\n                titlePaint.setStyle(Paint.Style.FILL);\r\n                titlePaint.setTypeface(Typeface.create(Typeface.SANS_SERIF, Typeface.BOLD));\r\n\r\n                myPaint.setTextSize(30f);\r\n                myPaint.setTextAlign(Paint.Align.LEFT);\r\n                myPaint.setStyle(Paint.Style.FILL);\r\n\r\n            }\r\n\r\n\r\n            private static void fillCell(int typeCell, String Qty, String location, String station, String price, String Total) {\r\n\r\n                if (typeCell == 0) {\r\n                    canvas.drawText(Qty, QtyTextStartXPoint, topStartTextDraw, titlePaint);\r\n                    canvas.drawText(location, locationTextStartXPoint, topStartTextDraw, titlePaint);\r\n                    canvas.drawText(station, stationTextStartXPoint, topStartTextDraw, titlePaint);\r\n                    canvas.drawText(price, priceTextStartPoint, topStartTextDraw, titlePaint);\r\n                    canvas.drawText(Total, totalTextStartXPoint, topStartTextDraw, titlePaint);\r\n                } else {\r\n                    canvas.drawText(Qty, QtyTextStartXPoint, topStartTextDraw, myPaint);\r\n                    canvas.drawText(location, locationTextStartXPoint, topStartTextDraw, myPaint);\r\n                    canvas.drawText(station, stationTextStartXPoint, topStartTextDraw, myPaint);\r\n                    canvas.drawText(price, priceTextStartPoint, topStartTextDraw, myPaint);\r\n                    canvas.drawText(Total, totalTextStartXPoint, topStartTextDraw, myPaint);\r\n\r\n                }\r\n                topStartTextDraw += 80;\r\n            }\r\n\r\n            private static void initMeasurements() {\r\n                topStartTextDraw = TOP_START_TEXT_DRAW;\r\n                pointTableTopStart = POINT_TABLE_TOP_START;\r\n                pointTableBottomEnd = POINT_TABLE_BOTTOM_END;\r\n            }\r\n        }\r\n        public static class ActionDetails{\r\n            public static void  createDetails(ArrayList<ActionDetailsCitizen> items, Context mContext) {\r\n                Report.pdfDocument = new PdfDocument();\r\n                Report.myPageInfo = new PdfDocument.PageInfo.Builder(PAGE_WIDTH, PAGE_HEIGHT, 1).create();\r\n                PdfDocument.Page myPage = pdfDocument.startPage(myPageInfo);\r\n                Date date = new Date();\r\n                myPaint.setStrokeWidth(1200);\r\n                titlePaint.setTextAlign(Paint.Align.CENTER);\r\n                titlePaint.setTypeface(Typeface.create(Typeface.DEFAULT, Typeface.BOLD));\r\n                titlePaint.setTextSize(70);\r\n                canvas = myPage.getCanvas();\r\n\r\n\r\n                canvas.drawText(\"Gas Managements System\", PAGE_WIDTH / 2, 150, titlePaint);\r\n                titlePaint.setTextSize(35f);\r\n                titlePaint.setTextAlign(Paint.Align.LEFT);\r\n                titlePaint.setStyle(Paint.Style.FILL);\r\n                titlePaint.setTypeface(Typeface.create(Typeface.SANS_SERIF, Typeface.BOLD));\r\n                canvas.drawText(\"نوع المستند : تقرير عن الحركات\", 750, 250, titlePaint);\r\n                mSimpleDateFormat = new SimpleDateFormat(\"yyyy-MM-dd HH-mm-s\");\r\n                canvas.drawText(mSimpleDateFormat.format(date), 50, 1950, titlePaint);\r\n                // draw the header of table\r\n                drawCell();\r\n                // draw the title of the head of table\r\n                fillCell(0, \"status\", \"Citizen Name\", \"aqel name\", \"Qty\", \"Total\");\r\n\r\n                // fill the data in the each raw\r\n                for (int i = 0; i < items.size(); i++) {\r\n                    pointTableTopStart += 80;\r\n                    pointTableBottomEnd += 80;\r\n                    drawCell();\r\n\r\n                    fillCell(1,items.get(i).getStatus()\r\n                            , items.get(i).getCitizenName()\r\n                            , items.get(i).getAqelName()\r\n                            , String.valueOf(items.get(i).getQty())\r\n                            , \"total\");\r\n\r\n                }\r\n\r\n\r\n                //draw the separator line between the title in the head of table\r\n                canvas.drawLine(locationXLine, POINT_TABLE_TOP_START, locationXLine, pointTableBottomEnd, myPaint);\r\n                canvas.drawLine(stationXLine, POINT_TABLE_TOP_START, stationXLine, pointTableBottomEnd, myPaint);\r\n                canvas.drawLine(priceXLine, POINT_TABLE_TOP_START, priceXLine, pointTableBottomEnd, myPaint);\r\n                canvas.drawLine(totalXLine, POINT_TABLE_TOP_START, totalXLine, pointTableBottomEnd, myPaint);\r\n\r\n\r\n                pdfDocument.finishPage(myPage);\r\n                mSimpleDateFormat = new SimpleDateFormat(\"yyyy_MM_dd_HH_mm_ss\");\r\n                File file = new File(Environment.getExternalStorageDirectory(), \"/\" + mSimpleDateFormat.format(date) + \".pdf\");\r\n                try {\r\n                    pdfDocument.writeTo(new FileOutputStream(file));\r\n                    pdfDocument.close();\r\n                    pdfDocument = null;\r\n                    myPageInfo = null;\r\n                    initMeasurements();\r\n                    Toast.makeText(mContext, \"pdf has saved\", Toast.LENGTH_SHORT).show();\r\n\r\n                } catch (IOException ex) {\r\n                    ex.printStackTrace();\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n        private static void drawCell() {\r\n\r\n            myPaint.setStyle(Paint.Style.STROKE);\r\n            myPaint.setStrokeWidth(2);\r\n            myPaint.setColor(Color.BLACK);\r\n\r\n            canvas.drawRect(20, pointTableTopStart, 1180, pointTableBottomEnd, myPaint);\r\n\r\n            titlePaint.setTextSize(35f);\r\n            titlePaint.setTextAlign(Paint.Align.LEFT);\r\n            titlePaint.setStyle(Paint.Style.FILL);\r\n            titlePaint.setTypeface(Typeface.create(Typeface.SANS_SERIF, Typeface.BOLD));\r\n\r\n            myPaint.setTextSize(30f);\r\n            myPaint.setTextAlign(Paint.Align.LEFT);\r\n            myPaint.setStyle(Paint.Style.FILL);\r\n\r\n        }\r\n\r\n\r\n        private static void fillCell(int typeCell, String Qty, String location, String station, String price, String Total) {\r\n\r\n            if (typeCell == 0) {\r\n                canvas.drawText(Qty, QtyTextStartXPoint, topStartTextDraw, titlePaint);\r\n                canvas.drawText(location, locationTextStartXPoint, topStartTextDraw, titlePaint);\r\n                canvas.drawText(station, stationTextStartXPoint, topStartTextDraw, titlePaint);\r\n                canvas.drawText(price, priceTextStartPoint, topStartTextDraw, titlePaint);\r\n                canvas.drawText(Total, totalTextStartXPoint, topStartTextDraw, titlePaint);\r\n            } else {\r\n                canvas.drawText(Qty, QtyTextStartXPoint, topStartTextDraw, myPaint);\r\n                canvas.drawText(location, locationTextStartXPoint, topStartTextDraw, myPaint);\r\n                canvas.drawText(station, stationTextStartXPoint, topStartTextDraw, myPaint);\r\n                canvas.drawText(price, priceTextStartPoint, topStartTextDraw, myPaint);\r\n                canvas.drawText(Total, totalTextStartXPoint, topStartTextDraw, myPaint);\r\n\r\n            }\r\n            topStartTextDraw += 80;\r\n        }\r\n\r\n        private static void initMeasurements() {\r\n            topStartTextDraw = TOP_START_TEXT_DRAW;\r\n            pointTableTopStart = POINT_TABLE_TOP_START;\r\n            pointTableBottomEnd = POINT_TABLE_BOTTOM_END;\r\n        }\r\n        }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/GMS/GeneralClasses/Report.java b/app/src/main/java/com/GMS/GeneralClasses/Report.java
--- a/app/src/main/java/com/GMS/GeneralClasses/Report.java	(revision e48385add5514f822590ef11b35c51f6c5d0bd16)
+++ b/app/src/main/java/com/GMS/GeneralClasses/Report.java	(date 1639559147175)
@@ -190,9 +190,9 @@
                     drawCell();
 
                     fillCell(1,items.get(i).getStatus()
-                            , items.get(i).getCitizenName()
-                            , items.get(i).getAqelName()
-                            , String.valueOf(items.get(i).getQty())
+                            , items.get(i).getsCitizenName()
+                            , items.get(i).getsAqelName()
+                            , String.valueOf(items.get(i).getsQty())
                             , "total");
 
                 }
Index: app/src/main/java/com/GMS/aqel/fragments/VerifiedAqelFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.GMS.aqel.fragments;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.widget.SearchView;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Toast;\r\n\r\nimport com.GMS.GeneralClasses.CitizenItemClickListener;\r\nimport com.GMS.R;\r\nimport com.GMS.SettingActivity;\r\nimport com.GMS.aqel.activities.AddCitizenActivity;\r\nimport com.GMS.aqel.adapters.RecyclerViewAqelAdapter;\r\nimport com.GMS.aqel.helperClass.CitizenItemOfAqel;\r\nimport com.GMS.databinding.FragmentVerifiedAqelBinding;\r\nimport com.GMS.firebaseFireStore.CitizenActionDetails;\r\nimport com.GMS.firebaseFireStore.CollectionName;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class VerifiedAqelFragment extends Fragment {\r\n\r\n    FragmentVerifiedAqelBinding mBinding;\r\n    RecyclerViewAqelAdapter adapter;\r\n    public static final int FRAGMENT_ID=1;\r\n    ArrayList<CitizenActionDetails> detailsItems = new ArrayList<>();\r\n    CitizenItemClickListener mItemClickListener;\r\n    long sellingPrice ;\r\n    private static int Qty;\r\n    private final FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private final CollectionReference mCollectionRef = db.collection(CollectionName.CITIZENS.name());\r\n    private final CollectionReference mCollectionRefNeighborhood = db.collection(CollectionName.NEIGHBORHOODS.name());\r\n    private final CollectionReference mCollectionRefAction = db.collection(CollectionName.ACTIONS.name());\r\n    private final CollectionReference mCollectionRefActionDetails = db.collection(CollectionName.ACTION_DETAILS.name());\r\n    String idAction;\r\n    private String id;\r\n    public VerifiedAqelFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        mBinding = FragmentVerifiedAqelBinding.inflate(inflater , container , false);\r\n       getAction();\r\n        mItemClickListener = new CitizenItemClickListener() {\r\n            @Override\r\n            public void onClick(int position) {\r\n                }\r\n        };\r\n\r\n        return mBinding.getRoot();\r\n\r\n    }\r\n    private void initRV()\r\n    {\r\n        mBinding.progressWhileLoading.setVisibility(View.GONE);\r\n        adapter = new RecyclerViewAqelAdapter(detailsItems , FRAGMENT_ID , mItemClickListener);\r\n        RecyclerView.LayoutManager layoutManager = new LinearLayoutManager(getContext());\r\n        mBinding.rvVerifiedFragment.setHasFixedSize(true);\r\n        mBinding.rvVerifiedFragment.setLayoutManager(layoutManager);\r\n        mBinding.rvVerifiedFragment.setAdapter(adapter);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(@Nullable @org.jetbrains.annotations.Nullable Bundle savedInstanceState) {\r\n        setHasOptionsMenu(true);\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n    @Override\r\n    public void onCreateOptionsMenu(@NonNull @NotNull Menu menu, @NonNull @NotNull MenuInflater inflater) {\r\n        inflater.inflate(R.menu.menu_aqel_top_bar , menu);\r\n        MenuItem searchItem = menu.findItem(R.id.search_ic);\r\n        SearchView searchView= (SearchView) searchItem.getActionView();\r\n\r\n        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\r\n            @Override\r\n            public boolean onQueryTextSubmit(String query) {\r\n                adapter.getFilter().filter(query);\r\n                return false;\r\n            }\r\n\r\n            @Override\r\n            public boolean onQueryTextChange(String newText) {\r\n                adapter.getFilter().filter(newText);\r\n                return false;\r\n            }\r\n\r\n        });\r\n        super.onCreateOptionsMenu(menu, inflater);\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(@NonNull @NotNull MenuItem item) {\r\n\r\n        switch(item.getItemId())\r\n        {\r\n            case R.id.add_citizen :\r\n                Intent mAddCitizenIntent = new Intent(this.getActivity()  , AddCitizenActivity.class);\r\n                startActivity(mAddCitizenIntent);\r\n                break;\r\n            case R.id.setting_item:\r\n                Intent mSettingIntent = new Intent(this.getActivity() , SettingActivity.class);\r\n                startActivity(mSettingIntent);\r\n                break;\r\n        }\r\n\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n    private void getAction() {\r\n\r\n        mCollectionRefAction.whereEqualTo(CollectionName.Fields.actionDate.name(), String.valueOf(new java.sql.Date(System.currentTimeMillis())))\r\n                .whereEqualTo(CollectionName.Fields.neighborhoodDetails.name() + \".\" + CollectionName.Fields.name.name(), \"Mousa Street\")\r\n                .get().addOnSuccessListener(new OnSuccessListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onSuccess(QuerySnapshot queryDocumentSnapshots) {\r\n                if (!queryDocumentSnapshots.isEmpty()) {\r\n                        idAction = queryDocumentSnapshots.getDocuments().get(0).getId();\r\n                        sellingPrice= queryDocumentSnapshots.getDocuments().get(0).getLong(CollectionName.Fields.sellingPrice.name().toString());\r\n\r\n                    getActionDetails();\r\n\r\n                } else {\r\n                    mBinding.progressWhileLoading.setVisibility(View.GONE);\r\n                    Toast.makeText(getContext().getApplicationContext(), \"no Action today\", Toast.LENGTH_SHORT).show();\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n    private void getActionDetails() {\r\n        mCollectionRefAction.document(idAction).collection(CollectionName.ACTION_DETAILS.name())\r\n                .whereEqualTo(CollectionName.Fields.deliveredState.name() + \".\" + CollectionName.Fields.aqelVerified, true)\r\n                .addSnapshotListener(new EventListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onEvent(@Nullable QuerySnapshot queryDocumentSnapshots, @Nullable FirebaseFirestoreException e) {\r\n                        if (e != null) {\r\n                            Log.e(TAG, e.toString());\r\n                        }\r\n                        if (queryDocumentSnapshots.isEmpty()) {\r\n                            adapter= null ;\r\n                            detailsItems.clear();\r\n                            mBinding.progressWhileLoading.setVisibility(View.GONE);\r\n                            Toast.makeText(getContext().getApplicationContext(), \"no Items\", Toast.LENGTH_SHORT).show();\r\n                        } else {\r\n                            adapter = null ;\r\n                            detailsItems.clear();\r\n                            for (QueryDocumentSnapshot q : queryDocumentSnapshots) {\r\n\r\n                                CitizenActionDetails actionDetails = q.toObject(CitizenActionDetails.class);\r\n                                actionDetails.setDocumentId(q.getId());\r\n                                detailsItems.add(actionDetails);\r\n                                Toast.makeText(getContext().getApplicationContext(), q.getId(), Toast.LENGTH_SHORT).show();\r\n\r\n                            }\r\n                            initRV();\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/GMS/aqel/fragments/VerifiedAqelFragment.java b/app/src/main/java/com/GMS/aqel/fragments/VerifiedAqelFragment.java
--- a/app/src/main/java/com/GMS/aqel/fragments/VerifiedAqelFragment.java	(revision e48385add5514f822590ef11b35c51f6c5d0bd16)
+++ b/app/src/main/java/com/GMS/aqel/fragments/VerifiedAqelFragment.java	(date 1639408777275)
@@ -177,9 +177,7 @@
                                 CitizenActionDetails actionDetails = q.toObject(CitizenActionDetails.class);
                                 actionDetails.setDocumentId(q.getId());
                                 detailsItems.add(actionDetails);
-                                Toast.makeText(getContext().getApplicationContext(), q.getId(), Toast.LENGTH_SHORT).show();
-
-                            }
+                                }
                             initRV();
                         }
                     }
Index: app/src/main/java/com/GMS/GeneralClasses/ActionDetailsCitizen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.GMS.GeneralClasses;\r\n\r\npublic class ActionDetailsCitizen {\r\n    private String citizenName ;\r\n    private int qty ;\r\n    private String aqelName;\r\n    private String repName;\r\n    private String status ;\r\n\r\n    public String getStatus() {\r\n        return status;\r\n    }\r\n\r\n    public ActionDetailsCitizen(String status , String citizenName, int qty, String aqelName, String repName) {\r\n        this.citizenName = citizenName;\r\n        this.qty = qty;\r\n        this.aqelName = aqelName;\r\n        this.repName = repName;\r\n        this.status = status;\r\n    }\r\n\r\n    public String getCitizenName() {\r\n        return citizenName;\r\n    }\r\n\r\n    public int getQty() {\r\n        return qty;\r\n    }\r\n\r\n    public String getAqelName() {\r\n        return aqelName;\r\n    }\r\n\r\n    public String getRepName() {\r\n        return repName;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/GMS/GeneralClasses/ActionDetailsCitizen.java b/app/src/main/java/com/GMS/GeneralClasses/ActionDetailsCitizen.java
--- a/app/src/main/java/com/GMS/GeneralClasses/ActionDetailsCitizen.java	(revision e48385add5514f822590ef11b35c51f6c5d0bd16)
+++ b/app/src/main/java/com/GMS/GeneralClasses/ActionDetailsCitizen.java	(date 1639559147160)
@@ -1,9 +1,9 @@
 package com.GMS.GeneralClasses;
 
 public class ActionDetailsCitizen {
-    private String citizenName ;
-    private int qty ;
-    private String aqelName;
+    private String sCitizenName;
+    private int sQty;
+    private String sAqelName;
     private String repName;
     private String status ;
 
@@ -11,24 +11,24 @@
         return status;
     }
 
-    public ActionDetailsCitizen(String status , String citizenName, int qty, String aqelName, String repName) {
-        this.citizenName = citizenName;
-        this.qty = qty;
-        this.aqelName = aqelName;
+    public ActionDetailsCitizen(String status , String sCitizenName, int sQty, String sAqelName, String repName) {
+        this.sCitizenName = sCitizenName;
+        this.sQty = sQty;
+        this.sAqelName = sAqelName;
         this.repName = repName;
         this.status = status;
     }
 
-    public String getCitizenName() {
-        return citizenName;
+    public String getsCitizenName() {
+        return sCitizenName;
     }
 
-    public int getQty() {
-        return qty;
+    public int getsQty() {
+        return sQty;
     }
 
-    public String getAqelName() {
-        return aqelName;
+    public String getsAqelName() {
+        return sAqelName;
     }
 
     public String getRepName() {
